{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/trip.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nfunction GenerateItineraryComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\")(1, \"p\");\n    i0.…µ…µtext(2, \"\\uD83E\\uDDE0 Generating your itinerary... Please wait.\");\n    i0.…µ…µelementEnd()();\n  }\n}\nfunction GenerateItineraryComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\")(1, \"h2\");\n    i0.…µ…µtext(2, \"\\uD83C\\uDF0D AI-Powered Itinerary\");\n    i0.…µ…µelementEnd();\n    i0.…µ…µelementStart(3, \"pre\");\n    i0.…µ…µtext(4);\n    i0.…µ…µelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.…µ…µnextContext();\n    i0.…µ…µadvance(4);\n    i0.…µ…µtextInterpolate(ctx_r1.generatedContent);\n  }\n}\nexport class GenerateItineraryComponent {\n  constructor(route, tripService, http) {\n    this.route = route;\n    this.tripService = tripService;\n    this.http = http;\n    this.trip = null;\n    this.isLoading = true;\n    this.generatedContent = '';\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      const tripId = params['tripId'];\n      if (tripId) {\n        this.tripService.getTripById(+tripId).subscribe(data => {\n          this.trip = data;\n          this.generateItinerary();\n        });\n      }\n    });\n  }\n  generateItinerary() {\n    if (!this.trip) return;\n    const prompt = `Create a detailed day-by-day travel itinerary for a trip to ${this.trip.destination} from ${this.trip.startDate} to ${this.trip.endDate} with a budget of ${this.trip.budget} rupees.`;\n    const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyDPbHKSjvx2I7JudIxBAQOf8soJ_rNUtwQ`;\n    const body = {\n      contents: [{\n        parts: [{\n          text: prompt\n        }]\n      }]\n    };\n    this.http.post(url, body).subscribe({\n      next: response => {\n        this.generatedContent = response?.candidates?.[0]?.content?.parts?.[0]?.text || 'No content generated';\n        this.isLoading = false;\n      },\n      error: err => {\n        console.error('Error generating itinerary:', err);\n        this.generatedContent = 'Failed to generate itinerary.';\n        this.isLoading = false;\n      }\n    });\n  }\n  static {\n    this.…µfac = function GenerateItineraryComponent_Factory(t) {\n      return new (t || GenerateItineraryComponent)(i0.…µ…µdirectiveInject(i1.ActivatedRoute), i0.…µ…µdirectiveInject(i2.TripService), i0.…µ…µdirectiveInject(i3.HttpClient));\n    };\n  }\n  static {\n    this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n      type: GenerateItineraryComponent,\n      selectors: [[\"app-generate-itinerary\"]],\n      decls: 2,\n      vars: 2,\n      consts: [[4, \"ngIf\"]],\n      template: function GenerateItineraryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.…µ…µtemplate(0, GenerateItineraryComponent_div_0_Template, 3, 0, \"div\", 0);\n          i0.…µ…µtemplate(1, GenerateItineraryComponent_div_1_Template, 5, 1, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.…µ…µproperty(\"ngIf\", ctx.isLoading);\n          i0.…µ…µadvance(1);\n          i0.…µ…µproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      dependencies: [i4.NgIf],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","…µ…µelementStart","…µ…µtext","…µ…µelementEnd","…µ…µadvance","…µ…µtextInterpolate","ctx_r1","generatedContent","GenerateItineraryComponent","constructor","route","tripService","http","trip","isLoading","ngOnInit","queryParams","subscribe","params","tripId","getTripById","data","generateItinerary","prompt","destination","startDate","endDate","budget","url","body","contents","parts","text","post","next","response","candidates","content","error","err","console","…µ…µdirectiveInject","i1","ActivatedRoute","i2","TripService","i3","HttpClient","selectors","decls","vars","consts","template","GenerateItineraryComponent_Template","rf","ctx","…µ…µtemplate","GenerateItineraryComponent_div_0_Template","GenerateItineraryComponent_div_1_Template","…µ…µproperty"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\generate-itinerary\\generate-itinerary.component.ts","E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\generate-itinerary\\generate-itinerary.component.html"],"sourcesContent":["// import { Component } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-generate-itinerary',\n//   templateUrl: './generate-itinerary.component.html',\n// })\n// export class GenerateItineraryComponent {\n//   destination = '';\n//   startDate = '';\n//   endDate = '';\n//   result: string = '';\n//   isLoading: boolean = false; // <-- loader flag\n\n//   constructor(private http: HttpClient) {}\n\n//   generateItinerary() {\n//     this.result = '';\n//     this.isLoading = true; // start loading\n\n//     const body = {\n//       destination: this.destination,\n//       startDate: this.startDate,\n//       endDate: this.endDate,\n//     };\n\n//     this.http.post<any>('http://localhost:8089/api/gemini/generate-itinerary', body).subscribe({\n//       next: (res) => {\n//         this.result = res.itinerary;\n//         this.isLoading = false; // stop loading\n//       },\n//       error: (err) => {\n//         console.error('Error:', err);\n//         this.result = 'An error occurred while generating the itinerary.';\n//         this.isLoading = false; // stop loading\n//       },\n//     });\n//   }\n// }\n\n\n// ‚úÖ STEP 2: Generate Itinerary Component that uses Gemini API\n// File: generate-itinerary.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TripService, Trip } from 'src/app/services/trip.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-generate-itinerary',\n  templateUrl: './generate-itinerary.component.html',\n})\nexport class GenerateItineraryComponent implements OnInit {\n  trip: Trip | null = null;\n  isLoading: boolean = true;\n  generatedContent: string = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private tripService: TripService,\n    private http: HttpClient\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      const tripId = params['tripId'];\n      if (tripId) {\n        this.tripService.getTripById(+tripId).subscribe(data => {\n          this.trip = data;\n          this.generateItinerary();\n        });\n      }\n    });\n  }\n\n  generateItinerary(): void {\n    if (!this.trip) return;\n\n    const prompt = `Create a detailed day-by-day travel itinerary for a trip to ${this.trip.destination} from ${this.trip.startDate} to ${this.trip.endDate} with a budget of ${this.trip.budget} rupees.`;\n\n    const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyDPbHKSjvx2I7JudIxBAQOf8soJ_rNUtwQ`;\n    const body = {\n      contents: [{ parts: [{ text: prompt }] }]\n    };\n\n    this.http.post<any>(url, body).subscribe({\n      next: (response) => {\n        this.generatedContent = response?.candidates?.[0]?.content?.parts?.[0]?.text || 'No content generated';\n        this.isLoading = false;\n      },\n      error: (err) => {\n        console.error('Error generating itinerary:', err);\n        this.generatedContent = 'Failed to generate itinerary.';\n        this.isLoading = false;\n      }\n    });\n  }\n}\n","<!-- <app-user-navbar></app-user-navbar>\n<!-- generate-itinerary.component.html -->\n<!-- <div style=\"max-width: 600px; margin: auto; padding: 20px;\">\n  <h2>Generate Travel Itinerary</h2>\n\n  <div style=\"margin-bottom: 10px;\">\n    <input type=\"text\" [(ngModel)]=\"destination\" placeholder=\"Destination\" class=\"form-control\" />\n  </div>\n\n  <div style=\"margin-bottom: 10px;\">\n    <input type=\"date\" [(ngModel)]=\"startDate\" class=\"form-control\" />\n  </div>\n\n  <div style=\"margin-bottom: 10px;\">\n    <input type=\"date\" [(ngModel)]=\"endDate\" class=\"form-control\" />\n  </div>\n\n  <button (click)=\"generateItinerary()\" class=\"btn btn-primary\">Generate</button>\n\n  Loader\n   <div *ngIf=\"isLoading\" style=\"margin-top: 20px;\">\n    <p><strong>Generating your itinerary...</strong></p> -->\n  <!-- </div> --> \n\n  <!-- Result -->\n  <!-- <div *ngIf=\"!isLoading && result\" style=\"margin-top: 20px;\">\n    <h4>Generated Itinerary:</h4>\n    <pre>{{ result }}</pre>\n  </div>\n</div> --> \n\n\n<div *ngIf=\"isLoading\">\n  <p>üß† Generating your itinerary... Please wait.</p>\n</div>\n<div *ngIf=\"!isLoading\">\n  <h2>üåç AI-Powered Itinerary</h2>\n  <pre>{{ generatedContent }}</pre>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}