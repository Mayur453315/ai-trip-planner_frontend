{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../user-navbar/user-navbar.component\";\nfunction AiTripListComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtext(1, \" No trips found. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AiTripListComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"h5\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 7)(5, \"strong\");\n    i0.ɵɵtext(6, \"Start:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementStart(9, \"strong\");\n    i0.ɵɵtext(10, \"End:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"div\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const trip_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(trip_r2.destination);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", trip_r2.startDate, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", trip_r2.endDate, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", trip_r2.itinerary, i0.ɵɵsanitizeHtml);\n  }\n}\nexport class AiTripListComponent {\n  constructor(http) {\n    this.http = http;\n    this.trips = [];\n  }\n  ngOnInit() {\n    const userEmail = localStorage.getItem('email');\n    this.http.get(`http://localhost:8084/api/ai-trips/user/${userEmail}`).subscribe({\n      next: data => {\n        this.trips = data;\n      },\n      error: err => {\n        console.error('Error fetching AI trips:', err);\n      }\n    });\n  }\n  deleteTrip(id) {\n    if (confirm('Are you sure you want to delete this trip?')) {\n      this.http.delete(`http://localhost:8084/api/ai-trips/${id}`, {\n        responseType: 'text'\n      }).subscribe({\n        next: () => {\n          alert('Trip deleted.');\n          this.trips = this.trips.filter(trip => trip.id !== id);\n        },\n        error: err => {\n          console.error('Delete Error:', err);\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function AiTripListComponent_Factory(t) {\n      return new (t || AiTripListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AiTripListComponent,\n      selectors: [[\"app-ai-trip-list\"]],\n      decls: 6,\n      vars: 2,\n      consts: [[1, \"container\", \"mt-4\"], [\"class\", \"alert alert-info mt-4\", 4, \"ngIf\"], [\"class\", \"card mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert\", \"alert-info\", \"mt-4\"], [1, \"card\", \"mb-3\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [3, \"innerHTML\"]],\n      template: function AiTripListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-user-navbar\");\n          i0.ɵɵelementStart(1, \"div\", 0)(2, \"h2\");\n          i0.ɵɵtext(3, \"Saved AI Trips\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, AiTripListComponent_div_4_Template, 2, 0, \"div\", 1);\n          i0.ɵɵtemplate(5, AiTripListComponent_div_5_Template, 13, 4, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.aiTrips.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.aiTrips);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.UserNavbarComponent],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","trip_r2","destination","ɵɵtextInterpolate1","startDate","endDate","ɵɵproperty","itinerary","ɵɵsanitizeHtml","AiTripListComponent","constructor","http","trips","ngOnInit","userEmail","localStorage","getItem","get","subscribe","next","data","error","err","console","deleteTrip","id","confirm","delete","responseType","alert","filter","trip","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AiTripListComponent_Template","rf","ctx","ɵɵtemplate","AiTripListComponent_div_4_Template","AiTripListComponent_div_5_Template","aiTrips","length"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\ai-trip-list\\ai-trip-list.component.ts","E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\ai-trip-list\\ai-trip-list.component.html"],"sourcesContent":["// // import { Component, OnInit } from '@angular/core';\n// // import { Router } from '@angular/router'; // ✅ import Router\n// // import { AiTrip } from 'src/app/models/ai-trip.model';\n// // import { AiTripService } from 'src/app/services/ai-trip.service';\n\n// // @Component({\n// //   selector: 'app-ai-trip-list',\n// //   templateUrl: './ai-trip-list.component.html',\n// //   styleUrls: ['./ai-trip-list.component.css']\n// // })\n// // export class AiTripListComponent implements OnInit {\n// //   trips: AiTrip[] = [];\n// //   isLoading = true;\n\n// //   constructor(\n// //     private tripService: AiTripService,\n// //     private router: Router // ✅ inject Router\n// //   ) {}\n\n// //  ngOnInit(): void {\n// //   const email = localStorage.getItem('email');\n// //   if (!email) return;\n\n// //   this.tripService.getTripsByEmail(email).subscribe({\n// //     next: (data) => {\n// //       this.trips = data;\n// //       this.isLoading = false;\n// //     },\n// //     error: (err) => {\n// //       console.error('Failed to load trips', err);\n// //       this.isLoading = false;\n// //     }\n// //   });\n// // }\n\n\n// //   // ✅ Navigate to details page\n// //   viewTrip(id: number) {\n// //     this.router.navigate(['/Ai-trip-details', id]);\n// //   }\n\n// //   editTrip(id: number) {\n// //   this.router.navigate(['/edit-ai-trip', id]); // You’ll need to create this route/component\n// // }\n\n// // deleteTrip(id: number) {\n// //   if (confirm('Are you sure you want to delete this trip?')) {\n// //     this.tripService.deleteTrip(id).subscribe({\n// //       next: () => {\n// //         alert('Trip deleted successfully');\n// //         this.trips = this.trips.filter(t => t.id !== id); // remove deleted trip from list\n// //       },\n// //       error: (err) => {\n// //         console.error('Failed to delete trip', err);\n// //         alert('Failed to delete trip');\n// //       }\n// //     });\n// //   }\n// // }\n\n\n// // }\n\n\n\n// // src/app/components/ai-trip-list/ai-trip-list.component.ts\n// import { Component, OnInit } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n\n// interface AiTrip {\n//   id: number;\n//   destination: string;\n//   startDate: string;\n//   endDate: string;\n//   itinerary: string;\n// }\n\n// @Component({\n//   selector: 'app-ai-trip-list',\n//   templateUrl: './ai-trip-list.component.html'\n// })\n// export class AiTripListComponent implements OnInit {\n//   aiTrips: AiTrip[] = [];\n//   userEmail: string | null = '';\n\n//   constructor(private http: HttpClient) {}\n\n//   ngOnInit(): void {\n//     this.userEmail = localStorage.getItem('email');\n//     if (this.userEmail) {\n//       this.fetchAiTrips(this.userEmail);\n//     }\n//   }\n\n//   fetchAiTrips(email: string) {\n//     this.http.get<AiTrip[]>(`http://localhost:8084/api/ai-trips/user/${email}`).subscribe({\n//       next: (data) => {\n//         this.aiTrips = data;\n//       },\n//       error: (err) => {\n//         console.error('Failed to fetch AI trips', err);\n//       }\n//     });\n//   }\n// }\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-ai-trip-list',\n  templateUrl: './ai-trip-list.component.html'\n})\nexport class AiTripListComponent implements OnInit {\n  trips: any[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    const userEmail = localStorage.getItem('email');\n    this.http.get<any[]>(`http://localhost:8084/api/ai-trips/user/${userEmail}`)\n      .subscribe({\n        next: (data) => {\n          this.trips = data;\n        },\n        error: (err) => {\n          console.error('Error fetching AI trips:', err);\n        }\n      });\n  }\n\n  deleteTrip(id: number) {\n    if (confirm('Are you sure you want to delete this trip?')) {\n      this.http.delete(`http://localhost:8084/api/ai-trips/${id}`, { responseType: 'text' })\n        .subscribe({\n          next: () => {\n            alert('Trip deleted.');\n            this.trips = this.trips.filter(trip => trip.id !== id);\n          },\n          error: (err) => {\n            console.error('Delete Error:', err);\n          }\n        });\n    }\n  }\n}\n","<!-- <app-user-navbar></app-user-navbar>\n<div *ngFor=\"let trip of trips\" class=\"card my-3 shadow-sm\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{{ trip.destination }}</h5>\n    <p class=\"card-text\">\n      {{ trip.startDate | date }} - {{ trip.endDate | date }}\n    </p>\n    <button class=\"btn btn-primary me-2\" (click)=\"viewTrip(trip.id)\">View</button>\n    <button class=\"btn btn-warning me-2\" (click)=\"editTrip(trip.id)\">Edit</button>\n    <button class=\"btn btn-danger\" (click)=\"deleteTrip(trip.id)\">Delete</button>\n  </div>\n</div> -->\n\n\n<!-- src/app/components/ai-trip-list/ai-trip-list.component.html -->\n<app-user-navbar></app-user-navbar>\n\n<div class=\"container mt-4\">\n  <h2>Saved AI Trips</h2>\n\n  <div *ngIf=\"aiTrips.length === 0\" class=\"alert alert-info mt-4\">\n    No trips found.\n  </div>\n\n  <div *ngFor=\"let trip of aiTrips\" class=\"card mb-3\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{ trip.destination }}</h5>\n      <p class=\"card-text\">\n        <strong>Start:</strong> {{ trip.startDate }}<br>\n        <strong>End:</strong> {{ trip.endDate }}\n      </p>\n      <div [innerHTML]=\"trip.itinerary\"></div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}