{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../user-navbar/user-navbar.component\";\nimport * as i6 from \"../packing-list/packing-list.component\";\nfunction GenerateItineraryComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3, \"Processing...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction GenerateItineraryComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Temperature:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\")(8, \"strong\");\n    i0.ɵɵtext(9, \"Condition:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\")(12, \"strong\");\n    i0.ɵɵtext(13, \"Humidity:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Current Weather in \", ctx_r1.weatherData.name, \":\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.weatherData.main.temp, \"\\u00B0C\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.weatherData.weather[0].description, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.weatherData.main.humidity, \"%\");\n  }\n}\nfunction GenerateItineraryComponent_app_packing_list_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-packing-list\", 16);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"weatherData\", ctx_r2.weatherData);\n  }\n}\nfunction GenerateItineraryComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h4\");\n    i0.ɵɵtext(2, \"Generated Itinerary:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 17);\n    i0.ɵɵelementStart(4, \"button\", 18);\n    i0.ɵɵtext(5, \"AI Trip Save\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r3.safeHtmlResult, i0.ɵɵsanitizeHtml);\n  }\n}\nexport class GenerateItineraryComponent {\n  constructor(http, sanitizer) {\n    this.http = http;\n    this.sanitizer = sanitizer;\n    this.destination = '';\n    this.startDate = '';\n    this.endDate = '';\n    this.rawResult = '';\n    this.translatedResult = '';\n    this.safeHtmlResult = '';\n    this.isLoading = false;\n    this.selectedLanguage = 'en';\n    this.weatherData = null;\n  }\n  generateItinerary() {\n    this.rawResult = '';\n    this.safeHtmlResult = '';\n    this.isLoading = true;\n    const body = {\n      destination: this.destination,\n      startDate: this.startDate,\n      endDate: this.endDate\n    };\n    this.http.post('http://localhost:8084/api/gemini/generate-itinerary', body).subscribe({\n      next: res => {\n        this.rawResult = res.itinerary;\n        this.translateItinerary(this.rawResult, this.selectedLanguage);\n      },\n      error: err => {\n        console.error('Itinerary Error:', err);\n        this.rawResult = 'An error occurred while generating the itinerary.';\n        this.safeHtmlResult = this.rawResult;\n        this.isLoading = false;\n      }\n    });\n  }\n  checkWeatherAndPacking() {\n    this.rawResult = '';\n    this.safeHtmlResult = '';\n    this.weatherData = null;\n    this.isLoading = true;\n    const apiKey = 'cf4280e39d29669fba3fcbd9bfc61b0c';\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.destination}&appid=${apiKey}&units=metric`;\n    this.http.get(url).subscribe({\n      next: data => {\n        this.weatherData = data;\n        this.isLoading = false;\n      },\n      error: err => {\n        console.error('Weather Error:', err);\n        this.weatherData = null;\n        this.isLoading = false;\n      }\n    });\n  }\n  translateItinerary(text, targetLang) {\n    if (targetLang === 'en') {\n      this.translatedResult = text;\n      this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(text));\n      this.isLoading = false;\n      return;\n    }\n    const url = `https://libretranslate.de/translate`;\n    const body = {\n      q: text,\n      source: 'en',\n      target: targetLang,\n      format: 'text'\n    };\n    this.http.post(url, body).subscribe({\n      next: res => {\n        const translatedText = res.translatedText;\n        this.translatedResult = translatedText;\n        this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(translatedText));\n        this.isLoading = false;\n      },\n      error: err => {\n        console.error('Translation Error:', err);\n        this.translatedResult = text;\n        this.safeHtmlResult = this.convertToHtml(text);\n        this.isLoading = false;\n      }\n    });\n  }\n  convertToHtml(markdown) {\n    let html = markdown;\n    html = html.replace(/^## (.*$)/gim, '<h3>$1</h3>');\n    html = html.replace(/^# (.*$)/gim, '<h2>$1</h2>');\n    html = html.replace(/\\*\\*(.*?)\\*\\*/gim, '<strong>$1</strong>');\n    html = html.replace(/\\*(.*?)\\*/gim, '<em>$1</em>');\n    html = html.replace(/^\\* (.*$)/gim, '<li>$1</li>');\n    html = html.replace(/(<li>[\\s\\S]*?<\\/li>)/gim, '<ul>$1</ul>');\n    html = html.replace(/\\n/g, '<br>');\n    return html.trim();\n  }\n  static {\n    this.ɵfac = function GenerateItineraryComponent_Factory(t) {\n      return new (t || GenerateItineraryComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GenerateItineraryComponent,\n      selectors: [[\"app-generate-itinerary\"]],\n      decls: 28,\n      vars: 8,\n      consts: [[2, \"max-width\", \"700px\", \"margin\", \"auto\", \"padding\", \"20px\"], [1, \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Destination\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"languageSelect\"], [\"id\", \"languageSelect\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"en\"], [\"value\", \"hi\"], [\"value\", \"mr\"], [1, \"btn\", \"btn-success\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-info\", 3, \"click\"], [\"style\", \"margin-top: 20px;\", 4, \"ngIf\"], [\"class\", \"mt-4 p-3 border rounded bg-light\", 4, \"ngIf\"], [3, \"weatherData\", 4, \"ngIf\"], [2, \"margin-top\", \"20px\"], [1, \"mt-4\", \"p-3\", \"border\", \"rounded\", \"bg-light\"], [3, \"weatherData\"], [1, \"border\", \"p-3\", \"rounded\", \"bg-light\", 3, \"innerHTML\"], [1, \"btn\", \"btn-primary\", \"mt-3\"]],\n      template: function GenerateItineraryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-user-navbar\");\n          i0.ɵɵelementStart(1, \"div\", 0)(2, \"h2\");\n          i0.ɵɵtext(3, \"Plan Your Trip\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 1)(5, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function GenerateItineraryComponent_Template_input_ngModelChange_5_listener($event) {\n            return ctx.destination = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 1)(7, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function GenerateItineraryComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.startDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 1)(9, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function GenerateItineraryComponent_Template_input_ngModelChange_9_listener($event) {\n            return ctx.endDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 4);\n          i0.ɵɵtext(12, \"Choose Language:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"select\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function GenerateItineraryComponent_Template_select_ngModelChange_13_listener($event) {\n            return ctx.selectedLanguage = $event;\n          });\n          i0.ɵɵelementStart(14, \"option\", 6);\n          i0.ɵɵtext(15, \"English\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"option\", 7);\n          i0.ɵɵtext(17, \"Hindi (\\u0939\\u093F\\u0902\\u0926\\u0940)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"option\", 8);\n          i0.ɵɵtext(19, \"Marathi (\\u092E\\u0930\\u093E\\u0920\\u0940)\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(20, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function GenerateItineraryComponent_Template_button_click_20_listener() {\n            return ctx.generateItinerary();\n          });\n          i0.ɵɵtext(21, \"Generate Itinerary\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function GenerateItineraryComponent_Template_button_click_22_listener() {\n            return ctx.checkWeatherAndPacking();\n          });\n          i0.ɵɵtext(23, \"Check Weather & Packing List\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(24, GenerateItineraryComponent_div_24_Template, 4, 0, \"div\", 11);\n          i0.ɵɵtemplate(25, GenerateItineraryComponent_div_25_Template, 15, 4, \"div\", 12);\n          i0.ɵɵtemplate(26, GenerateItineraryComponent_app_packing_list_26_Template, 1, 1, \"app-packing-list\", 13);\n          i0.ɵɵtemplate(27, GenerateItineraryComponent_div_27_Template, 6, 1, \"div\", 11);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.destination);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.startDate);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.endDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedLanguage);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.weatherData);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.weatherData);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.safeHtmlResult);\n        }\n      },\n      dependencies: [i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel, i5.UserNavbarComponent, i6.PackingListComponent],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","weatherData","name","main","temp","weather","description","humidity","ɵɵelement","ɵɵproperty","ctx_r2","ctx_r3","safeHtmlResult","ɵɵsanitizeHtml","GenerateItineraryComponent","constructor","http","sanitizer","destination","startDate","endDate","rawResult","translatedResult","isLoading","selectedLanguage","generateItinerary","body","post","subscribe","next","res","itinerary","translateItinerary","error","err","console","checkWeatherAndPacking","apiKey","url","get","data","text","targetLang","bypassSecurityTrustHtml","convertToHtml","q","source","target","format","translatedText","markdown","html","replace","trim","ɵɵdirectiveInject","i1","HttpClient","i2","DomSanitizer","selectors","decls","vars","consts","template","GenerateItineraryComponent_Template","rf","ctx","ɵɵlistener","GenerateItineraryComponent_Template_input_ngModelChange_5_listener","$event","GenerateItineraryComponent_Template_input_ngModelChange_7_listener","GenerateItineraryComponent_Template_input_ngModelChange_9_listener","GenerateItineraryComponent_Template_select_ngModelChange_13_listener","GenerateItineraryComponent_Template_button_click_20_listener","GenerateItineraryComponent_Template_button_click_22_listener","ɵɵtemplate","GenerateItineraryComponent_div_24_Template","GenerateItineraryComponent_div_25_Template","GenerateItineraryComponent_app_packing_list_26_Template","GenerateItineraryComponent_div_27_Template"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\generate-itinerary\\generate-itinerary.component.ts","E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\generate-itinerary\\generate-itinerary.component.html"],"sourcesContent":["// import { Component } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n// import { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n// @Component({\n//   selector: 'app-generate-itinerary',\n//   templateUrl: './generate-itinerary.component.html',\n// })\n// export class GenerateItineraryComponent {\n//   destination = '';\n//   startDate = '';\n//   endDate = '';\n//   rawResult: string = '';\n//   translatedResult: string = '';\n//   safeHtmlResult: SafeHtml = '';\n//   isLoading: boolean = false;\n//   selectedLanguage = 'en';\n//   weatherData: any = null;\n\n//   constructor(private http: HttpClient, private sanitizer: DomSanitizer) {}\n\n//   // Step 1: Generate only itinerary\n//   generateItinerary() {\n//     this.rawResult = '';\n//     this.safeHtmlResult = '';\n//     this.isLoading = true;\n\n//     const body = {\n//       destination: this.destination,\n//       startDate: this.startDate,\n//       endDate: this.endDate,\n//     };\n\n//     this.http.post<any>('http://localhost:8084/api/gemini/generate-itinerary', body).subscribe({\n//       next: (res) => {\n//         this.rawResult = res.itinerary;\n//         this.translateItinerary(this.rawResult, this.selectedLanguage);\n//       },\n//       error: (err) => {\n//         console.error('Itinerary Error:', err);\n//         this.rawResult = 'An error occurred while generating the itinerary.';\n//         this.safeHtmlResult = this.rawResult;\n//         this.isLoading = false;\n//       },\n//     });\n//   }\n\n//   // Step 2: Only check weather and display packing list\n//   checkWeatherAndPacking() {\n//     this.rawResult = '';\n//     this.safeHtmlResult = '';\n//     this.weatherData = null;\n//     this.isLoading = true;\n\n//     const apiKey = 'cf4280e39d29669fba3fcbd9bfc61b0c';\n//     const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.destination}&appid=${apiKey}&units=metric`;\n\n//     this.http.get<any>(url).subscribe({\n//       next: (data) => {\n//         this.weatherData = data;\n//         this.isLoading = false;\n//       },\n//       error: (err) => {\n//         console.error('Weather Error:', err);\n//         this.weatherData = null;\n//         this.isLoading = false;\n//       }\n//     });\n//   }\n\n//   translateItinerary(text: string, targetLang: string) {\n//     if (targetLang === 'en') {\n//       this.translatedResult = text;\n//       this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(text));\n//       this.isLoading = false;\n//       return;\n//     }\n\n//     const url = `https://libretranslate.de/translate`;\n//     const body = {\n//       q: text,\n//       source: 'en',\n//       target: targetLang,\n//       format: 'text'\n//     };\n\n//     this.http.post<any>(url, body).subscribe({\n//       next: (res) => {\n//         const translatedText = res.translatedText;\n//         this.translatedResult = translatedText;\n//         this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(translatedText));\n//         this.isLoading = false;\n//       },\n//       error: (err) => {\n//         console.error('Translation Error:', err);\n//         this.translatedResult = text;\n//         this.safeHtmlResult = this.convertToHtml(text);\n//         this.isLoading = false;\n//       },\n//     });\n//   }\n\n//   private convertToHtml(markdown: string): string {\n//     let html = markdown;\n//     html = html.replace(/^## (.*$)/gim, '<h3>$1</h3>');\n//     html = html.replace(/^# (.*$)/gim, '<h2>$1</h2>');\n//     html = html.replace(/\\*\\*(.*?)\\*\\*/gim, '<strong>$1</strong>');\n//     html = html.replace(/\\*(.*?)\\*/gim, '<em>$1</em>');\n//     html = html.replace(/^\\* (.*$)/gim, '<li>$1</li>');\n//     html = html.replace(/(<li>[\\s\\S]*?<\\/li>)/gim, '<ul>$1</ul>');\n//     html = html.replace(/\\n/g, '<br>');\n//     return html.trim();\n//   }\n// }\n\n\n\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-generate-itinerary',\n  templateUrl: './generate-itinerary.component.html',\n})\nexport class GenerateItineraryComponent {\n  destination = '';\n  startDate = '';\n  endDate = '';\n  rawResult: string = '';\n  translatedResult: string = '';\n  safeHtmlResult: SafeHtml = '';\n  isLoading: boolean = false;\n  selectedLanguage = 'en';\n  weatherData: any = null;\n\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer) {}\n\n  generateItinerary() {\n    this.rawResult = '';\n    this.safeHtmlResult = '';\n    this.isLoading = true;\n\n    const body = {\n      destination: this.destination,\n      startDate: this.startDate,\n      endDate: this.endDate,\n    };\n\n    this.http.post<any>('http://localhost:8084/api/gemini/generate-itinerary', body).subscribe({\n      next: (res) => {\n        this.rawResult = res.itinerary;\n        this.translateItinerary(this.rawResult, this.selectedLanguage);\n      },\n      error: (err) => {\n        console.error('Itinerary Error:', err);\n        this.rawResult = 'An error occurred while generating the itinerary.';\n        this.safeHtmlResult = this.rawResult;\n        this.isLoading = false;\n      },\n    });\n  }\n\n  checkWeatherAndPacking() {\n    this.rawResult = '';\n    this.safeHtmlResult = '';\n    this.weatherData = null;\n    this.isLoading = true;\n\n    const apiKey = 'cf4280e39d29669fba3fcbd9bfc61b0c';\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.destination}&appid=${apiKey}&units=metric`;\n\n    this.http.get<any>(url).subscribe({\n      next: (data) => {\n        this.weatherData = data;\n        this.isLoading = false;\n      },\n      error: (err) => {\n        console.error('Weather Error:', err);\n        this.weatherData = null;\n        this.isLoading = false;\n      }\n    });\n  }\n\n  translateItinerary(text: string, targetLang: string) {\n    if (targetLang === 'en') {\n      this.translatedResult = text;\n      this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(text));\n      this.isLoading = false;\n      return;\n    }\n\n    const url = `https://libretranslate.de/translate`;\n    const body = {\n      q: text,\n      source: 'en',\n      target: targetLang,\n      format: 'text'\n    };\n\n    this.http.post<any>(url, body).subscribe({\n      next: (res) => {\n        const translatedText = res.translatedText;\n        this.translatedResult = translatedText;\n        this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(translatedText));\n        this.isLoading = false;\n      },\n      error: (err) => {\n        console.error('Translation Error:', err);\n        this.translatedResult = text;\n        this.safeHtmlResult = this.convertToHtml(text);\n        this.isLoading = false;\n      },\n    });\n  }\n\n  private convertToHtml(markdown: string): string {\n    let html = markdown;\n    html = html.replace(/^## (.*$)/gim, '<h3>$1</h3>');\n    html = html.replace(/^# (.*$)/gim, '<h2>$1</h2>');\n    html = html.replace(/\\*\\*(.*?)\\*\\*/gim, '<strong>$1</strong>');\n    html = html.replace(/\\*(.*?)\\*/gim, '<em>$1</em>');\n    html = html.replace(/^\\* (.*$)/gim, '<li>$1</li>');\n    html = html.replace(/(<li>[\\s\\S]*?<\\/li>)/gim, '<ul>$1</ul>');\n    html = html.replace(/\\n/g, '<br>');\n    return html.trim();\n  }\n}\n\n","<app-user-navbar></app-user-navbar>\r\n\r\n<div style=\"max-width: 700px; margin: auto; padding: 20px;\">\r\n  <h2>Plan Your Trip</h2>\r\n\r\n  <div class=\"mb-3\">\r\n    <input type=\"text\" [(ngModel)]=\"destination\" placeholder=\"Destination\" class=\"form-control\" />\r\n  </div>\r\n\r\n  <div class=\"mb-3\">\r\n    <input type=\"date\" [(ngModel)]=\"startDate\" class=\"form-control\" />\r\n  </div>\r\n\r\n  <div class=\"mb-3\">\r\n    <input type=\"date\" [(ngModel)]=\"endDate\" class=\"form-control\" />\r\n  </div>\r\n\r\n  <div class=\"mb-3\">\r\n    <label for=\"languageSelect\">Choose Language:</label>\r\n    <select class=\"form-control\" id=\"languageSelect\" [(ngModel)]=\"selectedLanguage\">\r\n      <option value=\"en\">English</option>\r\n      <option value=\"hi\">Hindi (हिंदी)</option>\r\n      <option value=\"mr\">Marathi (मराठी)</option>\r\n    </select>\r\n  </div>\r\n\r\n  <button (click)=\"generateItinerary()\" class=\"btn btn-success me-2\">Generate Itinerary</button>\r\n  <button (click)=\"checkWeatherAndPacking()\" class=\"btn btn-info\">Check Weather & Packing List</button>\r\n\r\n  <div *ngIf=\"isLoading\" style=\"margin-top: 20px;\">\r\n    <p><strong>Processing...</strong></p>\r\n  </div>\r\n\r\n  <!-- Weather -->\r\n  <div *ngIf=\"!isLoading && weatherData\" class=\"mt-4 p-3 border rounded bg-light\">\r\n    <h4>Current Weather in {{ weatherData.name }}:</h4>\r\n    <p><strong>Temperature:</strong> {{ weatherData.main.temp }}°C</p>\r\n    <p><strong>Condition:</strong> {{ weatherData.weather[0].description }}</p>\r\n    <p><strong>Humidity:</strong> {{ weatherData.main.humidity }}%</p>\r\n  </div>\r\n\r\n  <!-- Packing List -->\r\n  <app-packing-list *ngIf=\"!isLoading && weatherData\" [weatherData]=\"weatherData\"></app-packing-list>\r\n\r\n  <!-- Itinerary -->\r\n  <div *ngIf=\"!isLoading && safeHtmlResult\" style=\"margin-top: 20px;\">\r\n    <h4>Generated Itinerary:</h4>\r\n    <div [innerHTML]=\"safeHtmlResult\" class=\"border p-3 rounded bg-light\"></div>\r\n\r\n    <!-- AI Trip Save Button -->\r\n    <button class=\"btn btn-primary mt-3\">AI Trip Save</button>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}