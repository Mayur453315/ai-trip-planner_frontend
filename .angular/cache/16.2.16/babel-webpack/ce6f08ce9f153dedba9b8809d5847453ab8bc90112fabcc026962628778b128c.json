{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AiTripService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8089/api/ai-trips';\n  }\n  // Save an AI-generated trip\n  saveTrip(trip) {\n    return this.http.post(`${this.baseUrl}`, trip);\n  }\n  // Get all AI trips by user email\n  getTripsByEmail(userEmail) {\n    return this.http.get(`${this.baseUrl}/user/${userEmail}`);\n  }\n  // Get one AI trip by ID\n  getTripById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  // Delete an AI trip by ID\n  deleteTrip(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function AiTripService_Factory(t) {\n      return new (t || AiTripService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AiTripService,\n      factory: AiTripService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AiTripService","constructor","http","baseUrl","saveTrip","trip","post","getTripsByEmail","userEmail","get","getTripById","id","deleteTrip","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\services\\ai-trip.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AiTripService {\n\n  private baseUrl = 'http://localhost:8089/api/ai-trips';\n\n  constructor(private http: HttpClient) { }\n\n  // Save an AI-generated trip\n  saveTrip(trip: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}`, trip);\n  }\n\n  // Get all AI trips by user email\n  getTripsByEmail(userEmail: string): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseUrl}/user/${userEmail}`);\n  }\n\n  // Get one AI trip by ID\n  getTripById(id: number): Observable<any> {\n    return this.http.get<any>(`${this.baseUrl}/${id}`);\n  }\n\n  // Delete an AI trip by ID\n  deleteTrip(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,oCAAoC;EAEd;EAExC;EACAC,QAAQA,CAACC,IAAS;IAChB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,EAAE,EAAEE,IAAI,CAAC;EAChD;EAEA;EACAE,eAAeA,CAACC,SAAiB;IAC/B,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAQ,GAAG,IAAI,CAACN,OAAO,SAASK,SAAS,EAAE,CAAC;EAClE;EAEA;EACAE,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAM,GAAG,IAAI,CAACN,OAAO,IAAIQ,EAAE,EAAE,CAAC;EACpD;EAEA;EACAC,UAAUA,CAACD,EAAU;IACnB,OAAO,IAAI,CAACT,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,OAAO,IAAIQ,EAAE,EAAE,CAAC;EAClD;;;uBAxBWX,aAAa,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbjB,aAAa;MAAAkB,OAAA,EAAblB,aAAa,CAAAmB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}