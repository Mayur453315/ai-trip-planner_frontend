{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let GenerateItineraryComponent = class GenerateItineraryComponent {\n  constructor(itineraryService, sanitizer) {\n    this.itineraryService = itineraryService;\n    this.sanitizer = sanitizer;\n    this.destination = '';\n    this.startDate = '';\n    this.endDate = '';\n    this.result = '';\n    this.safeHtmlResult = null;\n    this.isLoading = false;\n  }\n  ngOnInit() {}\n  generateItinerary() {\n    if (!this.destination || !this.startDate || !this.endDate) {\n      alert('Please fill all fields');\n      return;\n    }\n    this.isLoading = true;\n    this.itineraryService.generateItinerary(this.destination, this.startDate, this.endDate).subscribe({\n      next: response => {\n        this.result = response.itinerary;\n        this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(this.result));\n        this.isLoading = false;\n      },\n      error: error => {\n        console.error('Error generating itinerary:', error);\n        alert('Failed to generate itinerary');\n        this.isLoading = false;\n      }\n    });\n  }\n  convertToHtml(markdown) {\n    let html = markdown;\n    html = html.replace(/^## (.*$)/gim, '<h3 class=\"section-title\">$1</h3>');\n    html = html.replace(/^# (.*$)/gim, '<h2 class=\"main-title mt-4\">$1</h2>');\n    html = html.replace(/\\*\\*(.*?)\\*\\*/gim, '<strong>$1</strong>');\n    html = html.replace(/\\*(.*?)\\*/gim, '<em>$1</em>');\n    html = html.replace(/^\\* (.*$)/gim, '<li>$1</li>');\n    html = html.replace(/(<li>.*?<\\/li>)/gim, '<ul class=\"list-group mb-3\">$1</ul>');\n    html = html.replace(/\\n/g, '<br>');\n    return html.trim();\n  }\n};\nGenerateItineraryComponent = __decorate([Component({\n  selector: 'app-generate-itinerary',\n  templateUrl: './generate-itinerary.component.html',\n  styleUrls: ['./generate-itinerary.component.css']\n})], GenerateItineraryComponent);","map":{"version":3,"names":["Component","GenerateItineraryComponent","constructor","itineraryService","sanitizer","destination","startDate","endDate","result","safeHtmlResult","isLoading","ngOnInit","generateItinerary","alert","subscribe","next","response","itinerary","bypassSecurityTrustHtml","convertToHtml","error","console","markdown","html","replace","trim","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\generate-itinerary\\generate-itinerary.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { ItineraryService } from '../services/itinerary.service';\n\n@Component({\n  selector: 'app-generate-itinerary',\n  templateUrl: './generate-itinerary.component.html',\n  styleUrls: ['./generate-itinerary.component.css'],\n})\nexport class GenerateItineraryComponent implements OnInit {\n  destination: string = '';\n  startDate: string = '';\n  endDate: string = '';\n  result: string = '';\n  safeHtmlResult: SafeHtml | null = null;\n  isLoading: boolean = false;\n\n  constructor(private itineraryService: ItineraryService, private sanitizer: DomSanitizer) {}\n\n  ngOnInit(): void {}\n\n  generateItinerary(): void {\n    if (!this.destination || !this.startDate || !this.endDate) {\n      alert('Please fill all fields');\n      return;\n    }\n\n    this.isLoading = true;\n    this.itineraryService.generateItinerary(this.destination, this.startDate, this.endDate)\n      .subscribe({\n        next: (response: any) => {\n          this.result = response.itinerary;\n          this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(this.result));\n          this.isLoading = false;\n        },\n        error: (error) => {\n          console.error('Error generating itinerary:', error);\n          alert('Failed to generate itinerary');\n          this.isLoading = false;\n        }\n      });\n  }\n\n  private convertToHtml(markdown: string): string {\n    let html = markdown;\n\n    html = html.replace(/^## (.*$)/gim, '<h3 class=\"section-title\">$1</h3>');\n    html = html.replace(/^# (.*$)/gim, '<h2 class=\"main-title mt-4\">$1</h2>');\n    html = html.replace(/\\*\\*(.*?)\\*\\*/gim, '<strong>$1</strong>');\n    html = html.replace(/\\*(.*?)\\*/gim, '<em>$1</em>');\n    html = html.replace(/^\\* (.*$)/gim, '<li>$1</li>');\n    html = html.replace(/(<li>.*?<\\/li>)/gim, '<ul class=\"list-group mb-3\">$1</ul>');\n    html = html.replace(/\\n/g, '<br>');\n\n    return html.trim();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAQrCC,YAAoBC,gBAAkC,EAAUC,SAAuB;IAAnE,KAAAD,gBAAgB,GAAhBA,gBAAgB;IAA4B,KAAAC,SAAS,GAATA,SAAS;IAPzE,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,MAAM,GAAW,EAAE;IACnB,KAAAC,cAAc,GAAoB,IAAI;IACtC,KAAAC,SAAS,GAAY,KAAK;EAEgE;EAE1FC,QAAQA,CAAA,GAAU;EAElBC,iBAAiBA,CAAA;IACf,IAAI,CAAC,IAAI,CAACP,WAAW,IAAI,CAAC,IAAI,CAACC,SAAS,IAAI,CAAC,IAAI,CAACC,OAAO,EAAE;MACzDM,KAAK,CAAC,wBAAwB,CAAC;MAC/B;;IAGF,IAAI,CAACH,SAAS,GAAG,IAAI;IACrB,IAAI,CAACP,gBAAgB,CAACS,iBAAiB,CAAC,IAAI,CAACP,WAAW,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,OAAO,CAAC,CACpFO,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAa,IAAI;QACtB,IAAI,CAACR,MAAM,GAAGQ,QAAQ,CAACC,SAAS;QAChC,IAAI,CAACR,cAAc,GAAG,IAAI,CAACL,SAAS,CAACc,uBAAuB,CAAC,IAAI,CAACC,aAAa,CAAC,IAAI,CAACX,MAAM,CAAC,CAAC;QAC7F,IAAI,CAACE,SAAS,GAAG,KAAK;MACxB,CAAC;MACDU,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDP,KAAK,CAAC,8BAA8B,CAAC;QACrC,IAAI,CAACH,SAAS,GAAG,KAAK;MACxB;KACD,CAAC;EACN;EAEQS,aAAaA,CAACG,QAAgB;IACpC,IAAIC,IAAI,GAAGD,QAAQ;IAEnBC,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,cAAc,EAAE,mCAAmC,CAAC;IACxED,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,aAAa,EAAE,qCAAqC,CAAC;IACzED,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,kBAAkB,EAAE,qBAAqB,CAAC;IAC9DD,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,cAAc,EAAE,aAAa,CAAC;IAClDD,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,cAAc,EAAE,aAAa,CAAC;IAClDD,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,oBAAoB,EAAE,qCAAqC,CAAC;IAChFD,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;IAElC,OAAOD,IAAI,CAACE,IAAI,EAAE;EACpB;CACD;AA/CYxB,0BAA0B,GAAAyB,UAAA,EALtC1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,C,EACW5B,0BAA0B,CA+CtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}