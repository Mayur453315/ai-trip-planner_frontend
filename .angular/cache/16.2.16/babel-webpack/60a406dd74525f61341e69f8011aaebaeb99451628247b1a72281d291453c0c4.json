{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class PackingListService {\n  constructor() {}\n  generatePackingList(weather) {\n    const items = [];\n    const temp = weather.main.temp;\n    const condition = weather.weather[0].main.toLowerCase();\n    const description = weather.weather[0].description.toLowerCase();\n    // Temperature\n    if (temp > 30) {\n      items.push('Sunscreen', 'Sunglasses', 'Hat', 'Water bottle');\n    } else if (temp < 15) {\n      items.push('Jacket', 'Gloves', 'Thermal wear');\n    } else {\n      items.push('Light jacket', 'Comfortable shoes');\n    }\n    // Conditions\n    if (condition.includes('rain') || description.includes('rain') || description.includes('overcast')) {\n      items.push('Umbrella', 'Raincoat', 'Waterproof shoes');\n    } else if (condition.includes('wind')) {\n      items.push('Windbreaker');\n    }\n    return items;\n  }\n  static {\n    this.ɵfac = function PackingListService_Factory(t) {\n      return new (t || PackingListService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PackingListService,\n      factory: PackingListService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["PackingListService","constructor","generatePackingList","weather","items","temp","main","condition","toLowerCase","description","push","includes","factory","ɵfac","providedIn"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\services\\packing-list.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PackingListService {\n  constructor() {}\n\n  generatePackingList(weather: any): string[] {\n    const items: string[] = [];\n\n    const temp = weather.main.temp;\n    const condition = weather.weather[0].main.toLowerCase();\n    const description = weather.weather[0].description.toLowerCase();\n\n    // Temperature\n    if (temp > 30) {\n      items.push('Sunscreen', 'Sunglasses', 'Hat', 'Water bottle');\n    } else if (temp < 15) {\n      items.push('Jacket', 'Gloves', 'Thermal wear');\n    } else {\n      items.push('Light jacket', 'Comfortable shoes');\n    }\n\n    // Conditions\n    if (condition.includes('rain') || description.includes('rain') || description.includes('overcast')) {\n      items.push('Umbrella', 'Raincoat', 'Waterproof shoes');\n    } else if (condition.includes('wind')) {\n      items.push('Windbreaker');\n    }\n\n    return items;\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,kBAAkB;EAC7BC,YAAA,GAAe;EAEfC,mBAAmBA,CAACC,OAAY;IAC9B,MAAMC,KAAK,GAAa,EAAE;IAE1B,MAAMC,IAAI,GAAGF,OAAO,CAACG,IAAI,CAACD,IAAI;IAC9B,MAAME,SAAS,GAAGJ,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACG,IAAI,CAACE,WAAW,EAAE;IACvD,MAAMC,WAAW,GAAGN,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACM,WAAW,CAACD,WAAW,EAAE;IAEhE;IACA,IAAIH,IAAI,GAAG,EAAE,EAAE;MACbD,KAAK,CAACM,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,cAAc,CAAC;KAC7D,MAAM,IAAIL,IAAI,GAAG,EAAE,EAAE;MACpBD,KAAK,CAACM,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,cAAc,CAAC;KAC/C,MAAM;MACLN,KAAK,CAACM,IAAI,CAAC,cAAc,EAAE,mBAAmB,CAAC;;IAGjD;IACA,IAAIH,SAAS,CAACI,QAAQ,CAAC,MAAM,CAAC,IAAIF,WAAW,CAACE,QAAQ,CAAC,MAAM,CAAC,IAAIF,WAAW,CAACE,QAAQ,CAAC,UAAU,CAAC,EAAE;MAClGP,KAAK,CAACM,IAAI,CAAC,UAAU,EAAE,UAAU,EAAE,kBAAkB,CAAC;KACvD,MAAM,IAAIH,SAAS,CAACI,QAAQ,CAAC,MAAM,CAAC,EAAE;MACrCP,KAAK,CAACM,IAAI,CAAC,aAAa,CAAC;;IAG3B,OAAON,KAAK;EACd;;;uBA3BWJ,kBAAkB;IAAA;EAAA;;;aAAlBA,kBAAkB;MAAAY,OAAA,EAAlBZ,kBAAkB,CAAAa,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}