{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/ai-trip.service\";\nimport * as i3 from \"@angular/forms\";\nexport class EditAiTripComponent {\n  constructor(route, tripService, fb, router) {\n    this.route = route;\n    this.tripService = tripService;\n    this.fb = fb;\n    this.router = router;\n    this.isLoading = true;\n    this.tripForm = this.fb.group({\n      destination: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      itinerary: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.tripId = +this.route.snapshot.paramMap.get('id');\n    this.tripService.getTripById(this.tripId).subscribe({\n      next: trip => {\n        this.tripForm.patchValue(trip);\n        this.isLoading = false;\n      },\n      error: err => {\n        console.error('Error loading trip', err);\n        this.isLoading = false;\n      }\n    });\n  }\n  onSubmit() {\n    if (this.tripForm.invalid) return;\n    const updatedTrip = {\n      id: this.tripId,\n      ...this.tripForm.value\n    };\n    this.tripService.updateTrip(this.tripId, updatedTrip).subscribe({\n      next: () => {\n        alert('Trip updated successfully!');\n        this.router.navigate(['/Ai-trip-list']);\n      },\n      error: err => {\n        console.error('Update failed', err);\n        alert('Failed to update trip.');\n      }\n    });\n  }\n  static {\n    this.ɵfac = function EditAiTripComponent_Factory(t) {\n      return new (t || EditAiTripComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AiTripService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i1.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditAiTripComponent,\n      selectors: [[\"app-edit-ai-trip\"]],\n      decls: 2,\n      vars: 0,\n      template: function EditAiTripComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"edit-ai-trip works!\");\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","EditAiTripComponent","constructor","route","tripService","fb","router","isLoading","tripForm","group","destination","required","startDate","endDate","itinerary","ngOnInit","tripId","snapshot","paramMap","get","getTripById","subscribe","next","trip","patchValue","error","err","console","onSubmit","invalid","updatedTrip","id","value","updateTrip","alert","navigate","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","AiTripService","i3","FormBuilder","Router","selectors","decls","vars","template","EditAiTripComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\edit-ai-trip\\edit-ai-trip.component.ts","E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\edit-ai-trip\\edit-ai-trip.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AiTripService, AiTrip } from 'src/app/services/ai-trip.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-ai-trip',\n  templateUrl: './edit-ai-trip.component.html',\n  styleUrls: ['./edit-ai-trip.component.css']\n})\nexport class EditAiTripComponent implements OnInit {\n  tripForm: FormGroup;\n  tripId!: number;\n  isLoading = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private tripService: AiTripService,\n    private fb: FormBuilder,\n    private router: Router\n  ) {\n    this.tripForm = this.fb.group({\n      destination: ['', Validators.required],\n      startDate: ['', Validators.required],\n      endDate: ['', Validators.required],\n      itinerary: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.tripId = +this.route.snapshot.paramMap.get('id')!;\n    this.tripService.getTripById(this.tripId).subscribe({\n      next: (trip) => {\n        this.tripForm.patchValue(trip);\n        this.isLoading = false;\n      },\n      error: (err) => {\n        console.error('Error loading trip', err);\n        this.isLoading = false;\n      }\n    });\n  }\n\n  onSubmit() {\n    if (this.tripForm.invalid) return;\n\n    const updatedTrip: AiTrip = {\n      id: this.tripId,\n      ...this.tripForm.value\n    };\n\n    this.tripService.updateTrip(this.tripId, updatedTrip).subscribe({\n      next: () => {\n        alert('Trip updated successfully!');\n        this.router.navigate(['/Ai-trip-list']);\n      },\n      error: (err) => {\n        console.error('Update failed', err);\n        alert('Failed to update trip.');\n      }\n    });\n  }\n}","<p>edit-ai-trip works!</p>\n"],"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAOnE,OAAM,MAAOC,mBAAmB;EAK9BC,YACUC,KAAqB,EACrBC,WAA0B,EAC1BC,EAAe,EACfC,MAAc;IAHd,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,SAAS,GAAG,IAAI;IAQd,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC5BC,WAAW,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;MACtCC,SAAS,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ,CAAC;MACpCE,OAAO,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,QAAQ,CAAC;MAClCG,SAAS,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACW,QAAQ;KACpC,CAAC;EACJ;EAEAI,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACb,KAAK,CAACc,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IACtD,IAAI,CAACf,WAAW,CAACgB,WAAW,CAAC,IAAI,CAACJ,MAAM,CAAC,CAACK,SAAS,CAAC;MAClDC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACf,QAAQ,CAACgB,UAAU,CAACD,IAAI,CAAC;QAC9B,IAAI,CAAChB,SAAS,GAAG,KAAK;MACxB,CAAC;MACDkB,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,oBAAoB,EAAEC,GAAG,CAAC;QACxC,IAAI,CAACnB,SAAS,GAAG,KAAK;MACxB;KACD,CAAC;EACJ;EAEAqB,QAAQA,CAAA;IACN,IAAI,IAAI,CAACpB,QAAQ,CAACqB,OAAO,EAAE;IAE3B,MAAMC,WAAW,GAAW;MAC1BC,EAAE,EAAE,IAAI,CAACf,MAAM;MACf,GAAG,IAAI,CAACR,QAAQ,CAACwB;KAClB;IAED,IAAI,CAAC5B,WAAW,CAAC6B,UAAU,CAAC,IAAI,CAACjB,MAAM,EAAEc,WAAW,CAAC,CAACT,SAAS,CAAC;MAC9DC,IAAI,EAAEA,CAAA,KAAK;QACTY,KAAK,CAAC,4BAA4B,CAAC;QACnC,IAAI,CAAC5B,MAAM,CAAC6B,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;MACzC,CAAC;MACDV,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,eAAe,EAAEC,GAAG,CAAC;QACnCQ,KAAK,CAAC,wBAAwB,CAAC;MACjC;KACD,CAAC;EACJ;;;uBAnDWjC,mBAAmB,EAAAmC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAM,MAAA;IAAA;EAAA;;;YAAnB3C,mBAAmB;MAAA4C,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCVhCd,EAAA,CAAAgB,cAAA,QAAG;UAAAhB,EAAA,CAAAiB,MAAA,0BAAmB;UAAAjB,EAAA,CAAAkB,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}