{"ast":null,"code":"import { __decorate } from \"tslib\";\n// src/app/ai-trip-list/ai-trip-list.component.ts\nimport { Component } from '@angular/core';\nexport let AiTripListComponent = class AiTripListComponent {\n  constructor(aiTripService) {\n    this.aiTripService = aiTripService;\n    this.aiTrips = [];\n    this.userEmail = '';\n  }\n  ngOnInit() {\n    const storedEmail = localStorage.getItem('email');\n    if (storedEmail) {\n      this.userEmail = storedEmail;\n      this.loadTrips();\n    }\n  }\n  loadTrips() {\n    this.aiTripService.getTripsByEmail(this.userEmail).subscribe({\n      next: data => this.aiTrips = data,\n      error: err => console.error('Error loading AI trips:', err)\n    });\n  }\n};\nAiTripListComponent = __decorate([Component({\n  selector: 'app-ai-trip-list',\n  templateUrl: './ai-trip-list.component.html',\n  styleUrls: ['./ai-trip-list.component.css']\n})], AiTripListComponent);","map":{"version":3,"names":["Component","AiTripListComponent","constructor","aiTripService","aiTrips","userEmail","ngOnInit","storedEmail","localStorage","getItem","loadTrips","getTripsByEmail","subscribe","next","data","error","err","console","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\ai-trip-list\\ai-trip-list.component.ts"],"sourcesContent":["// src/app/ai-trip-list/ai-trip-list.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { AiTripService } from 'src/app/services/ai-trip.service';\n\n\n@Component({\n  selector: 'app-ai-trip-list',\n  templateUrl: './ai-trip-list.component.html',\n  styleUrls: ['./ai-trip-list.component.css']\n})\nexport class AiTripListComponent implements OnInit {\n\n  aiTrips: any[] = [];\n  userEmail: string = '';\n\n  constructor(private aiTripService: AiTripService) {}\n\n  ngOnInit(): void {\n    const storedEmail = localStorage.getItem('email');\n    if (storedEmail) {\n      this.userEmail = storedEmail;\n      this.loadTrips();\n    }\n  }\n\n  loadTrips(): void {\n    this.aiTripService.getTripsByEmail(this.userEmail).subscribe({\n      next: (data) => this.aiTrips = data,\n      error: (err) => console.error('Error loading AI trips:', err)\n    });\n  }\n}\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAK9BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAHjC,KAAAC,OAAO,GAAU,EAAE;IACnB,KAAAC,SAAS,GAAW,EAAE;EAE6B;EAEnDC,QAAQA,CAAA;IACN,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACf,IAAI,CAACF,SAAS,GAAGE,WAAW;MAC5B,IAAI,CAACG,SAAS,EAAE;;EAEpB;EAEAA,SAASA,CAAA;IACP,IAAI,CAACP,aAAa,CAACQ,eAAe,CAAC,IAAI,CAACN,SAAS,CAAC,CAACO,SAAS,CAAC;MAC3DC,IAAI,EAAGC,IAAI,IAAK,IAAI,CAACV,OAAO,GAAGU,IAAI;MACnCC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,yBAAyB,EAAEC,GAAG;KAC7D,CAAC;EACJ;CACD;AArBYf,mBAAmB,GAAAiB,UAAA,EAL/BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWpB,mBAAmB,CAqB/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}