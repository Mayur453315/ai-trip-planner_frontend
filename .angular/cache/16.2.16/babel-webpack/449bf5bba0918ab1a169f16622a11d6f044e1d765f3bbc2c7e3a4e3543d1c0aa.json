{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TripService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8089/api/trips';\n    this.aiUrl = 'http://localhost:8089/api/ai/itinerary';\n  }\n  getAllTrips() {\n    const email = localStorage.getItem('email') || '';\n    return this.http.get(`${this.baseUrl}/all/${email}`);\n  }\n  getTripById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  createTrip(trip) {\n    const email = localStorage.getItem('email') || '';\n    return this.http.post(`${this.baseUrl}/${email}`, trip);\n  }\n  updateTrip(id, trip) {\n    return this.http.put(`${this.baseUrl}/${id}`, trip);\n  }\n  deleteTrip(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  addTrip(trip) {\n    return this.createTrip(trip);\n  }\n  generateAiItinerary(prompt) {\n    return this.http.post(this.aiUrl, {\n      prompt\n    }, {\n      responseType: 'text'\n    });\n  }\n  static {\n    this.ɵfac = function TripService_Factory(t) {\n      return new (t || TripService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TripService,\n      factory: TripService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TripService","constructor","http","baseUrl","aiUrl","getAllTrips","email","localStorage","getItem","get","getTripById","id","createTrip","trip","post","updateTrip","put","deleteTrip","delete","addTrip","generateAiItinerary","prompt","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\services\\trip.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Trip {\n  id?: number;\n  tripName: string;\n  destination: string;\n  startDate: string; // ISO string format\n  endDate: string;\n  budget: number;\n  notes: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TripService {\n  private baseUrl = 'http://localhost:8089/api/trips';\n  private aiUrl = 'http://localhost:8089/api/ai/itinerary';\n\n  constructor(private http: HttpClient) {}\n\n  getAllTrips(): Observable<Trip[]> {\n    const email = localStorage.getItem('email') || '';\n    return this.http.get<Trip[]>(`${this.baseUrl}/all/${email}`);\n  }\n\n  getTripById(id: number): Observable<Trip> {\n    return this.http.get<Trip>(`${this.baseUrl}/${id}`);\n  }\n\n  createTrip(trip: Trip): Observable<Trip> {\n    const email = localStorage.getItem('email') || '';\n    return this.http.post<Trip>(`${this.baseUrl}/${email}`, trip);\n  }\n\n  updateTrip(id: number, trip: Trip): Observable<Trip> {\n    return this.http.put<Trip>(`${this.baseUrl}/${id}`, trip);\n  }\n\n  deleteTrip(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n\n  addTrip(trip: Trip): Observable<Trip> {\n    return this.createTrip(trip);\n  }\n\n  generateAiItinerary(prompt: string): Observable<string> {\n    return this.http.post(this.aiUrl, { prompt }, { responseType: 'text' });\n  }\n}\n"],"mappings":";;AAiBA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,OAAO,GAAG,iCAAiC;IAC3C,KAAAC,KAAK,GAAG,wCAAwC;EAEjB;EAEvCC,WAAWA,CAAA;IACT,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IACjD,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAS,GAAG,IAAI,CAACN,OAAO,QAAQG,KAAK,EAAE,CAAC;EAC9D;EAEAI,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAO,GAAG,IAAI,CAACN,OAAO,IAAIQ,EAAE,EAAE,CAAC;EACrD;EAEAC,UAAUA,CAACC,IAAU;IACnB,MAAMP,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IACjD,OAAO,IAAI,CAACN,IAAI,CAACY,IAAI,CAAO,GAAG,IAAI,CAACX,OAAO,IAAIG,KAAK,EAAE,EAAEO,IAAI,CAAC;EAC/D;EAEAE,UAAUA,CAACJ,EAAU,EAAEE,IAAU;IAC/B,OAAO,IAAI,CAACX,IAAI,CAACc,GAAG,CAAO,GAAG,IAAI,CAACb,OAAO,IAAIQ,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC3D;EAEAI,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACT,IAAI,CAACgB,MAAM,CAAO,GAAG,IAAI,CAACf,OAAO,IAAIQ,EAAE,EAAE,CAAC;EACxD;EAEAQ,OAAOA,CAACN,IAAU;IAChB,OAAO,IAAI,CAACD,UAAU,CAACC,IAAI,CAAC;EAC9B;EAEAO,mBAAmBA,CAACC,MAAc;IAChC,OAAO,IAAI,CAACnB,IAAI,CAACY,IAAI,CAAC,IAAI,CAACV,KAAK,EAAE;MAAEiB;IAAM,CAAE,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC;EACzE;;;uBAlCWtB,WAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX1B,WAAW;MAAA2B,OAAA,EAAX3B,WAAW,CAAA4B,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}