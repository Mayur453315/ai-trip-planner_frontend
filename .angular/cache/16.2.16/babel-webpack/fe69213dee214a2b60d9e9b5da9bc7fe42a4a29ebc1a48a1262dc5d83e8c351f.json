{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AiTripService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8084/api/ai-trips';\n  }\n  getTripsByUserEmail(email) {\n    return this.http.get(`${this.baseUrl}/user/${email}`);\n  }\n  getTripById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  updateTrip(id, updatedTrip) {\n    return this.http.put(`${this.baseUrl}/${id}`, updatedTrip);\n  }\n  deleteTrip(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function AiTripService_Factory(t) {\n      return new (t || AiTripService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AiTripService,\n      factory: AiTripService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AiTripService","constructor","http","baseUrl","getTripsByUserEmail","email","get","getTripById","id","updateTrip","updatedTrip","put","deleteTrip","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\services\\ai-trip.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AiTrip } from '../models/ai-trip.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AiTripService {\n  private baseUrl = 'http://localhost:8084/api/ai-trips';\n\n  constructor(private http: HttpClient) {}\n\n  getTripsByUserEmail(email: string): Observable<AiTrip[]> {\n    return this.http.get<AiTrip[]>(`${this.baseUrl}/user/${email}`);\n  }\n\n  getTripById(id: number): Observable<AiTrip> {\n    return this.http.get<AiTrip>(`${this.baseUrl}/${id}`);\n  }\n\n  updateTrip(id: number, updatedTrip: AiTrip): Observable<AiTrip> {\n    return this.http.put<AiTrip>(`${this.baseUrl}/${id}`, updatedTrip);\n  }\n\n  deleteTrip(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,oCAAoC;EAEf;EAEvCC,mBAAmBA,CAACC,KAAa;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,OAAO,SAASE,KAAK,EAAE,CAAC;EACjE;EAEAE,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAS,GAAG,IAAI,CAACH,OAAO,IAAIK,EAAE,EAAE,CAAC;EACvD;EAEAC,UAAUA,CAACD,EAAU,EAAEE,WAAmB;IACxC,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAS,GAAG,IAAI,CAACR,OAAO,IAAIK,EAAE,EAAE,EAAEE,WAAW,CAAC;EACpE;EAEAE,UAAUA,CAACJ,EAAU;IACnB,OAAO,IAAI,CAACN,IAAI,CAACW,MAAM,CAAO,GAAG,IAAI,CAACV,OAAO,IAAIK,EAAE,EAAE,CAAC;EACxD;;;uBAnBWR,aAAa,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbjB,aAAa;MAAAkB,OAAA,EAAblB,aAAa,CAAAmB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}