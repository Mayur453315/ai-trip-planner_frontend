{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TripService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8089/api/trips';\n  }\n  addTrip(trip) {\n    const email = localStorage.getItem('email') || '';\n    return this.http.post(`${this.apiUrl}/${email}`, trip);\n  }\n  getAllTrips() {\n    const email = localStorage.getItem('email') || '';\n    return this.http.get(`${this.apiUrl}/all/${email}`);\n  }\n  getTripById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  updateTrip(id, trip) {\n    return this.http.put(`${this.apiUrl}/${id}`, trip);\n  }\n  deleteTrip(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function TripService_Factory(t) {\n      return new (t || TripService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TripService,\n      factory: TripService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TripService","constructor","http","apiUrl","addTrip","trip","email","localStorage","getItem","post","getAllTrips","get","getTripById","id","updateTrip","put","deleteTrip","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\services\\trip.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Trip } from '../models/trip.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TripService {\n\n  private apiUrl = 'http://localhost:8089/api/trips';\n\n  constructor(private http: HttpClient) {}\n\n  addTrip(trip: Trip): Observable<Trip> {\n    const email = localStorage.getItem('email') || '';\n    return this.http.post<Trip>(`${this.apiUrl}/${email}`, trip);\n  }\n\n  getAllTrips(): Observable<Trip[]> {\n    const email = localStorage.getItem('email') || '';\n    return this.http.get<Trip[]>(`${this.apiUrl}/all/${email}`);\n  }\n\n  getTripById(id: number): Observable<Trip> {\n    return this.http.get<Trip>(`${this.apiUrl}/${id}`);\n  }\n\n  updateTrip(id: number, trip: Trip): Observable<Trip> {\n    return this.http.put<Trip>(`${this.apiUrl}/${id}`, trip);\n  }\n\n  deleteTrip(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC;EAEX;EAEvCC,OAAOA,CAACC,IAAU;IAChB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IACjD,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAO,GAAG,IAAI,CAACN,MAAM,IAAIG,KAAK,EAAE,EAAED,IAAI,CAAC;EAC9D;EAEAK,WAAWA,CAAA;IACT,MAAMJ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IACjD,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAS,GAAG,IAAI,CAACR,MAAM,QAAQG,KAAK,EAAE,CAAC;EAC7D;EAEAM,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACX,IAAI,CAACS,GAAG,CAAO,GAAG,IAAI,CAACR,MAAM,IAAIU,EAAE,EAAE,CAAC;EACpD;EAEAC,UAAUA,CAACD,EAAU,EAAER,IAAU;IAC/B,OAAO,IAAI,CAACH,IAAI,CAACa,GAAG,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIU,EAAE,EAAE,EAAER,IAAI,CAAC;EAC1D;EAEAW,UAAUA,CAACH,EAAU;IACnB,OAAO,IAAI,CAACX,IAAI,CAACe,MAAM,CAAO,GAAG,IAAI,CAACd,MAAM,IAAIU,EAAE,EAAE,CAAC;EACvD;;;uBA1BWb,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXrB,WAAW;MAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}