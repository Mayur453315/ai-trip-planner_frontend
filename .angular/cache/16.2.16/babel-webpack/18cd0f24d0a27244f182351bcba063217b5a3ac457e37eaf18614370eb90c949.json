{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.credentials = {\n      email: '',\n      password: ''\n    };\n  }\n  loginUser() {\n    this.authService.login(this.credentials).subscribe({\n      next: res => {\n        localStorage.setItem('token', res.token || 'dummy-token');\n        localStorage.setItem('role', res.role);\n        // ✅ Store name and email properly (handle both res.user and res.username/email)\n        localStorage.setItem('name', res.user?.name || res.username || '');\n        localStorage.setItem('email', res.user?.email || res.email || '');\n        alert('Login successful!');\n        if (res.role === 'ADMIN') {\n          this.router.navigate(['/admin-dashboard']);\n        } else if (res.role === 'USER') {\n          this.router.navigate(['/user-dashboard']);\n        } else {\n          this.router.navigate(['/']);\n        }\n      },\n      error: err => {\n        alert('Login failed. Please check your credentials.');\n        console.error(err);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 14,\n      vars: 2,\n      consts: [[1, \"container\", \"mt-5\", \"col-md-6\"], [3, \"submit\"], [1, \"form-group\", \"mb-2\"], [\"name\", \"email\", \"type\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"password\", \"type\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mt-2\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_3_listener() {\n            return ctx.loginUser();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n          i0.ɵɵtext(6, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.credentials.email = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.credentials.password = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"button\", 5);\n          i0.ɵɵtext(13, \"Login\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.credentials.email);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.credentials.password);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","router","credentials","email","password","loginUser","login","subscribe","next","res","localStorage","setItem","token","role","user","name","username","alert","navigate","error","err","console","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_submit_3_listener","LoginComponent_Template_input_ngModelChange_7_listener","$event","LoginComponent_Template_input_ngModelChange_11_listener","ɵɵadvance","ɵɵproperty"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\login\\login.component.ts","E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  credentials = {\n    email: '',\n    password: ''\n  };\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  loginUser() {\n    this.authService.login(this.credentials).subscribe({\n      next: (res: any) => {\n        localStorage.setItem('token', res.token || 'dummy-token');\n        localStorage.setItem('role', res.role);\n\n        // ✅ Store name and email properly (handle both res.user and res.username/email)\n        localStorage.setItem('name', res.user?.name || res.username || '');\n        localStorage.setItem('email', res.user?.email || res.email || '');\n\n        alert('Login successful!');\n\n        if (res.role === 'ADMIN') {\n          this.router.navigate(['/admin-dashboard']);\n        } else if (res.role === 'USER') {\n          this.router.navigate(['/user-dashboard']);\n        } else {\n          this.router.navigate(['/']);\n        }\n      },\n      error: err => {\n        alert('Login failed. Please check your credentials.');\n        console.error(err);\n      }\n    });\n  }\n}\n","<div class=\"container mt-5 col-md-6\">\n  <h2>Login</h2>\n  <form (submit)=\"loginUser()\">\n    <div class=\"form-group mb-2\">\n      <label>Email</label>\n      <input [(ngModel)]=\"credentials.email\" name=\"email\" type=\"email\" class=\"form-control\" required>\n    </div>\n    <div class=\"form-group mb-2\">\n      <label>Password</label>\n      <input [(ngModel)]=\"credentials.password\" name=\"password\" type=\"password\" class=\"form-control\" required>\n    </div>\n    <button class=\"btn btn-success mt-2\" type=\"submit\">Login</button>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}