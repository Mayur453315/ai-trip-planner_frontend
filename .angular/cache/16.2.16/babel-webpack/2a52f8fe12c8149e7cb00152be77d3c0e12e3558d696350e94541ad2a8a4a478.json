{"ast":null,"code":"// src/app/components/generate-itinerary/generate-itinerary.component.ts\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let GenerateItineraryComponent = class GenerateItineraryComponent {\n  constructor(http, sanitizer) {\n    this.http = http;\n    this.sanitizer = sanitizer;\n    this.destination = '';\n    this.startDate = '';\n    this.endDate = '';\n    this.rawResult = '';\n    this.translatedResult = '';\n    this.safeHtmlResult = '';\n    this.isLoading = false;\n    this.selectedLanguage = 'en';\n    this.weatherData = null;\n  }\n  generateItinerary() {\n    this.rawResult = '';\n    this.safeHtmlResult = '';\n    this.isLoading = true;\n    const body = {\n      destination: this.destination,\n      startDate: this.startDate,\n      endDate: this.endDate\n    };\n    this.http.post('http://localhost:8084/api/gemini/generate-itinerary', body).subscribe({\n      next: res => {\n        this.rawResult = res.itinerary;\n        this.translateItinerary(this.rawResult, this.selectedLanguage);\n      },\n      error: err => {\n        console.error('Itinerary Error:', err);\n        this.rawResult = 'An error occurred while generating the itinerary.';\n        this.safeHtmlResult = this.rawResult;\n        this.isLoading = false;\n      }\n    });\n  }\n  checkWeatherAndPacking() {\n    this.rawResult = '';\n    this.safeHtmlResult = '';\n    this.weatherData = null;\n    this.isLoading = true;\n    const apiKey = 'cf4280e39d29669fba3fcbd9bfc61b0c';\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.destination}&appid=${apiKey}&units=metric`;\n    this.http.get(url).subscribe({\n      next: data => {\n        this.weatherData = data;\n        this.isLoading = false;\n      },\n      error: err => {\n        console.error('Weather Error:', err);\n        this.weatherData = null;\n        this.isLoading = false;\n      }\n    });\n  }\n  translateItinerary(text, targetLang) {\n    if (targetLang === 'en') {\n      this.translatedResult = text;\n      this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(text));\n      this.isLoading = false;\n      return;\n    }\n    const url = `https://libretranslate.de/translate`;\n    const body = {\n      q: text,\n      source: 'en',\n      target: targetLang,\n      format: 'text'\n    };\n    this.http.post(url, body).subscribe({\n      next: res => {\n        const translatedText = res.translatedText;\n        this.translatedResult = translatedText;\n        this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(translatedText));\n        this.isLoading = false;\n      },\n      error: err => {\n        console.error('Translation Error:', err);\n        this.translatedResult = text;\n        this.safeHtmlResult = this.convertToHtml(text);\n        this.isLoading = false;\n      }\n    });\n  }\n  convertToHtml(markdown) {\n    let html = markdown;\n    html = html.replace(/^## (.*$)/gim, '<h3>$1</h3>');\n    html = html.replace(/^# (.*$)/gim, '<h2>$1</h2>');\n    html = html.replace(/\\*\\*(.*?)\\*\\*/gim, '<strong>$1</strong>');\n    html = html.replace(/\\*(.*?)\\*/gim, '<em>$1</em>');\n    html = html.replace(/^\\* (.*$)/gim, '<li>$1</li>');\n    html = html.replace(/(<li>[\\s\\S]*?<\\/li>)/gim, '<ul>$1</ul>');\n    html = html.replace(/\\n/g, '<br>');\n    return html.trim();\n  }\n  saveAiTrip() {\n    const aiTrip = {\n      destination: this.destination,\n      startDate: this.startDate,\n      endDate: this.endDate,\n      itinerary: this.translatedResult\n    };\n    this.http.post('http://localhost:8084/api/ai-trips', aiTrip).subscribe({\n      next: () => alert('AI Trip saved successfully!'),\n      error: err => console.error('Save AI Trip Error:', err)\n    });\n  }\n};\nGenerateItineraryComponent = __decorate([Component({\n  selector: 'app-generate-itinerary',\n  templateUrl: './generate-itinerary.component.html'\n})], GenerateItineraryComponent);","map":{"version":3,"names":["Component","GenerateItineraryComponent","constructor","http","sanitizer","destination","startDate","endDate","rawResult","translatedResult","safeHtmlResult","isLoading","selectedLanguage","weatherData","generateItinerary","body","post","subscribe","next","res","itinerary","translateItinerary","error","err","console","checkWeatherAndPacking","apiKey","url","get","data","text","targetLang","bypassSecurityTrustHtml","convertToHtml","q","source","target","format","translatedText","markdown","html","replace","trim","saveAiTrip","aiTrip","alert","__decorate","selector","templateUrl"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\ai-trip-list\\ai-trip-list.component.ts"],"sourcesContent":["// src/app/components/generate-itinerary/generate-itinerary.component.ts\n\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-generate-itinerary',\n  templateUrl: './generate-itinerary.component.html',\n})\nexport class GenerateItineraryComponent {\n  destination = '';\n  startDate = '';\n  endDate = '';\n  rawResult: string = '';\n  translatedResult: string = '';\n  safeHtmlResult: SafeHtml = '';\n  isLoading: boolean = false;\n  selectedLanguage = 'en';\n  weatherData: any = null;\n\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer) {}\n\n  generateItinerary() {\n    this.rawResult = '';\n    this.safeHtmlResult = '';\n    this.isLoading = true;\n\n    const body = {\n      destination: this.destination,\n      startDate: this.startDate,\n      endDate: this.endDate,\n    };\n\n    this.http.post<any>('http://localhost:8084/api/gemini/generate-itinerary', body).subscribe({\n      next: (res) => {\n        this.rawResult = res.itinerary;\n        this.translateItinerary(this.rawResult, this.selectedLanguage);\n      },\n      error: (err) => {\n        console.error('Itinerary Error:', err);\n        this.rawResult = 'An error occurred while generating the itinerary.';\n        this.safeHtmlResult = this.rawResult;\n        this.isLoading = false;\n      },\n    });\n  }\n\n  checkWeatherAndPacking() {\n    this.rawResult = '';\n    this.safeHtmlResult = '';\n    this.weatherData = null;\n    this.isLoading = true;\n\n    const apiKey = 'cf4280e39d29669fba3fcbd9bfc61b0c';\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.destination}&appid=${apiKey}&units=metric`;\n\n    this.http.get<any>(url).subscribe({\n      next: (data) => {\n        this.weatherData = data;\n        this.isLoading = false;\n      },\n      error: (err) => {\n        console.error('Weather Error:', err);\n        this.weatherData = null;\n        this.isLoading = false;\n      }\n    });\n  }\n\n  translateItinerary(text: string, targetLang: string) {\n    if (targetLang === 'en') {\n      this.translatedResult = text;\n      this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(text));\n      this.isLoading = false;\n      return;\n    }\n\n    const url = `https://libretranslate.de/translate`;\n    const body = {\n      q: text,\n      source: 'en',\n      target: targetLang,\n      format: 'text'\n    };\n\n    this.http.post<any>(url, body).subscribe({\n      next: (res) => {\n        const translatedText = res.translatedText;\n        this.translatedResult = translatedText;\n        this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(translatedText));\n        this.isLoading = false;\n      },\n      error: (err) => {\n        console.error('Translation Error:', err);\n        this.translatedResult = text;\n        this.safeHtmlResult = this.convertToHtml(text);\n        this.isLoading = false;\n      },\n    });\n  }\n\n  private convertToHtml(markdown: string): string {\n    let html = markdown;\n    html = html.replace(/^## (.*$)/gim, '<h3>$1</h3>');\n    html = html.replace(/^# (.*$)/gim, '<h2>$1</h2>');\n    html = html.replace(/\\*\\*(.*?)\\*\\*/gim, '<strong>$1</strong>');\n    html = html.replace(/\\*(.*?)\\*/gim, '<em>$1</em>');\n    html = html.replace(/^\\* (.*$)/gim, '<li>$1</li>');\n    html = html.replace(/(<li>[\\s\\S]*?<\\/li>)/gim, '<ul>$1</ul>');\n    html = html.replace(/\\n/g, '<br>');\n    return html.trim();\n  }\n\n  saveAiTrip() {\n    const aiTrip = {\n      destination: this.destination,\n      startDate: this.startDate,\n      endDate: this.endDate,\n      itinerary: this.translatedResult\n    };\n\n    this.http.post('http://localhost:8084/api/ai-trips', aiTrip).subscribe({\n      next: () => alert('AI Trip saved successfully!'),\n      error: (err) => console.error('Save AI Trip Error:', err)\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}