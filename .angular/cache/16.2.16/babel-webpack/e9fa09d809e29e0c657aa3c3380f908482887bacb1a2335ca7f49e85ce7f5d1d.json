{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/trip.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../user-navbar/user-navbar.component\";\nexport class AddTripComponent {\n  constructor(tripService, router, route) {\n    this.tripService = tripService;\n    this.router = router;\n    this.route = route;\n    this.trip = {\n      tripName: '',\n      destination: '',\n      startDate: '',\n      endDate: '',\n      email: '' // will be filled from localStorage\n    };\n\n    this.isEditMode = false;\n  }\n  ngOnInit() {\n    this.trip.email = localStorage.getItem('userEmail') || '';\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.isEditMode = true;\n        this.tripId = +params['id'];\n        this.tripService.getTripById(this.tripId).subscribe(data => {\n          this.trip = data;\n        });\n      }\n    });\n  }\n  onSubmit() {\n    if (this.isEditMode) {\n      this.tripService.updateTrip(this.tripId, this.trip).subscribe(() => {\n        this.router.navigate(['/user-dashboard']);\n      });\n    } else {\n      this.tripService.addTrip(this.trip).subscribe(() => {\n        this.router.navigate(['/user-dashboard']);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function AddTripComponent_Factory(t) {\n      return new (t || AddTripComponent)(i0.ɵɵdirectiveInject(i1.TripService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddTripComponent,\n      selectors: [[\"app-add-trip\"]],\n      decls: 27,\n      vars: 7,\n      consts: [[1, \"container\", \"mt-4\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"tripName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"destination\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"name\", \"startDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"name\", \"endDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"notes\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-success\", \"mt-3\"]],\n      template: function AddTripComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-user-navbar\");\n          i0.ɵɵelementStart(1, \"div\", 0)(2, \"h2\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AddTripComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\");\n          i0.ɵɵtext(7, \"Trip Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function AddTripComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.trip.tripName = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\");\n          i0.ɵɵtext(11, \"Destination\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function AddTripComponent_Template_input_ngModelChange_12_listener($event) {\n            return ctx.trip.destination = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\");\n          i0.ɵɵtext(15, \"Start Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function AddTripComponent_Template_input_ngModelChange_16_listener($event) {\n            return ctx.trip.startDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 2)(18, \"label\");\n          i0.ɵɵtext(19, \"End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function AddTripComponent_Template_input_ngModelChange_20_listener($event) {\n            return ctx.trip.endDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 2)(22, \"label\");\n          i0.ɵɵtext(23, \"Notes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"textarea\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function AddTripComponent_Template_textarea_ngModelChange_24_listener($event) {\n            return ctx.trip.notes = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"button\", 8);\n          i0.ɵɵtext(26);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Trip\" : \"Add Trip\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.trip.tripName);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.trip.destination);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.trip.startDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.trip.endDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.trip.notes);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update Trip\" : \"Add Trip\");\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.UserNavbarComponent],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["AddTripComponent","constructor","tripService","router","route","trip","tripName","destination","startDate","endDate","email","isEditMode","ngOnInit","localStorage","getItem","params","subscribe","tripId","getTripById","data","onSubmit","updateTrip","navigate","addTrip","i0","ɵɵdirectiveInject","i1","TripService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","AddTripComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddTripComponent_Template_form_ngSubmit_4_listener","AddTripComponent_Template_input_ngModelChange_8_listener","$event","AddTripComponent_Template_input_ngModelChange_12_listener","AddTripComponent_Template_input_ngModelChange_16_listener","AddTripComponent_Template_input_ngModelChange_20_listener","AddTripComponent_Template_textarea_ngModelChange_24_listener","notes","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\add-trip\\add-trip.component.ts","E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\add-trip\\add-trip.component.html"],"sourcesContent":["// src/app/components/add-trip/add-trip.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { TripService, Trip } from 'src/app/services/trip.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-add-trip',\n  templateUrl: './add-trip.component.html'\n})\nexport class AddTripComponent implements OnInit {\n  trip: Trip = {\n    tripName: '',\n    destination: '',\n    startDate: '',\n    endDate: '',\n    email: '' // will be filled from localStorage\n  };\n\n  isEditMode = false;\n  tripId!: number;\n\n  constructor(\n    private tripService: TripService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.trip.email = localStorage.getItem('userEmail') || '';\n\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.isEditMode = true;\n        this.tripId = +params['id'];\n        this.tripService.getTripById(this.tripId).subscribe(data => {\n          this.trip = data;\n        });\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (this.isEditMode) {\n      this.tripService.updateTrip(this.tripId, this.trip).subscribe(() => {\n        this.router.navigate(['/user-dashboard']);\n      });\n    } else {\n      this.tripService.addTrip(this.trip).subscribe(() => {\n        this.router.navigate(['/user-dashboard']);\n      });\n    }\n  }\n}\n","<app-user-navbar></app-user-navbar>\n\n<div class=\"container mt-4\">\n  <h2>{{ isEditMode ? 'Edit Trip' : 'Add Trip' }}</h2>\n\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label>Trip Name</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"trip.tripName\" name=\"tripName\" required />\n    </div>\n\n    <div class=\"form-group\">\n      <label>Destination</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"trip.destination\" name=\"destination\" required />\n    </div>\n\n    <div class=\"form-group\">\n      <label>Start Date</label>\n      <input type=\"date\" class=\"form-control\" [(ngModel)]=\"trip.startDate\" name=\"startDate\" required />\n    </div>\n\n    <div class=\"form-group\">\n      <label>End Date</label>\n      <input type=\"date\" class=\"form-control\" [(ngModel)]=\"trip.endDate\" name=\"endDate\" required />\n    </div>\n\n    <div class=\"form-group\">\n      <label>Notes</label>\n      <textarea class=\"form-control\" [(ngModel)]=\"trip.notes\" name=\"notes\"></textarea>\n    </div>\n\n    <button class=\"btn btn-success mt-3\">{{ isEditMode ? 'Update Trip' : 'Add Trip' }}</button>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}