{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AiTripService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8084/api/ai-trips';\n  }\n  // ✅ fetch user-specific trips\n  getAllTrips() {\n    const email = localStorage.getItem('userEmail');\n    return this.http.get(`${this.baseUrl}/user?email=${email}`);\n  }\n  saveTrip(trip) {\n    return this.http.post(this.baseUrl, trip);\n  }\n  deleteTrip(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n  getTripById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function AiTripService_Factory(t) {\n      return new (t || AiTripService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AiTripService,\n      factory: AiTripService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AiTripService","constructor","http","baseUrl","getAllTrips","email","localStorage","getItem","get","saveTrip","trip","post","deleteTrip","id","delete","getTripById","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\services\\ai-trip.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AiTrip } from '../models/ai-trip.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AiTripService {\n  private baseUrl = 'http://localhost:8084/api/ai-trips';\n\n  constructor(private http: HttpClient) { }\n\n  // ✅ fetch user-specific trips\n  getAllTrips(): Observable<AiTrip[]> {\n    const email = localStorage.getItem('userEmail');\n    return this.http.get<AiTrip[]>(`${this.baseUrl}/user?email=${email}`);\n  }\n\n  saveTrip(trip: AiTrip): Observable<AiTrip> {\n    return this.http.post<AiTrip>(this.baseUrl, trip);\n  }\n\n  deleteTrip(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n\n  getTripById(id: number): Observable<AiTrip> {\n    return this.http.get<AiTrip>(`${this.baseUrl}/${id}`);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,oCAAoC;EAEd;EAExC;EACAC,WAAWA,CAAA;IACT,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAW,GAAG,IAAI,CAACL,OAAO,eAAeE,KAAK,EAAE,CAAC;EACvE;EAEAI,QAAQA,CAACC,IAAY;IACnB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAS,IAAI,CAACR,OAAO,EAAEO,IAAI,CAAC;EACnD;EAEAE,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACX,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIU,EAAE,EAAE,CAAC;EAClD;EAEAE,WAAWA,CAACF,EAAU;IACpB,OAAO,IAAI,CAACX,IAAI,CAACM,GAAG,CAAS,GAAG,IAAI,CAACL,OAAO,IAAIU,EAAE,EAAE,CAAC;EACvD;;;uBArBWb,aAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbnB,aAAa;MAAAoB,OAAA,EAAbpB,aAAa,CAAAqB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}