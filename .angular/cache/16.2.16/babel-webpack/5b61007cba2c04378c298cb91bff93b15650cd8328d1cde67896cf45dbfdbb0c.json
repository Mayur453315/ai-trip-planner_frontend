{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../user-navbar/user-navbar.component\";\nfunction GenerateItineraryComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelement(1, \"div\", 12);\n    i0.ɵɵelementStart(2, \"p\", 13);\n    i0.ɵɵtext(3, \"Generating your itinerary...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GenerateItineraryComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h4\", 15);\n    i0.ɵɵtext(2, \"Your Itinerary\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.safeHtmlResult, i0.ɵɵsanitizeHtml);\n  }\n}\nexport class GenerateItineraryComponent {\n  constructor(http, sanitizer) {\n    this.http = http;\n    this.sanitizer = sanitizer;\n    this.destination = '';\n    this.startDate = '';\n    this.endDate = '';\n    this.rawResult = '';\n    this.safeHtmlResult = '';\n    this.isLoading = false;\n  }\n  generateItinerary() {\n    this.rawResult = '';\n    this.safeHtmlResult = '';\n    this.isLoading = true;\n    const body = {\n      destination: this.destination,\n      startDate: this.startDate,\n      endDate: this.endDate\n    };\n    this.http.post('http://localhost:8089/api/gemini/generate-itinerary', body).subscribe({\n      next: res => {\n        this.rawResult = res.itinerary;\n        this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(this.convertToHtml(res.itinerary));\n        this.isLoading = false;\n      },\n      error: err => {\n        console.error('Error:', err);\n        this.rawResult = 'An error occurred while generating the itinerary.';\n        this.safeHtmlResult = this.rawResult;\n        this.isLoading = false;\n      }\n    });\n  }\n  convertToHtml(markdown) {\n    let html = markdown;\n    // Convert headings\n    html = html.replace(/^## (.*$)/gim, '<h3>$1</h3>');\n    html = html.replace(/^# (.*$)/gim, '<h2>$1</h2>');\n    // Bold\n    html = html.replace(/\\*\\*(.*?)\\*\\*/gim, '<strong>$1</strong>');\n    // Italic\n    html = html.replace(/\\*(.*?)\\*/gim, '<em>$1</em>');\n    // Lists\n    html = html.replace(/^\\* (.*$)/gim, '<li>$1</li>');\n    // Wrap lists in <ul>\n    html = html.replace(/(<li>[\\s\\S]*?<\\/li>)/gim, '<ul>$1</ul>');\n    // Line breaks\n    html = html.replace(/\\n/g, '<br>');\n    return html.trim();\n  }\n  static {\n    this.ɵfac = function GenerateItineraryComponent_Factory(t) {\n      return new (t || GenerateItineraryComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GenerateItineraryComponent,\n      selectors: [[\"app-generate-itinerary\"]],\n      decls: 22,\n      vars: 5,\n      consts: [[1, \"container\", \"mt-5\"], [1, \"card\", \"shadow\", \"p-4\"], [1, \"text-center\", \"mb-4\"], [1, \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Enter destination\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"row\", \"mb-3\"], [1, \"col\"], [\"type\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"w-100\", 3, \"click\"], [\"class\", \"text-center mt-4\", 4, \"ngIf\"], [\"class\", \"mt-4\", 4, \"ngIf\"], [1, \"text-center\", \"mt-4\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"mt-2\"], [1, \"mt-4\"], [1, \"text-success\", \"mb-3\"], [1, \"formatted-itinerary\", \"p-3\", \"border\", \"rounded\", \"bg-light\", 3, \"innerHTML\"]],\n      template: function GenerateItineraryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-user-navbar\");\n          i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"h2\", 2);\n          i0.ɵɵtext(4, \"Generate Travel Itinerary\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\");\n          i0.ɵɵtext(7, \"Destination\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function GenerateItineraryComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.destination = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 5)(10, \"div\", 6)(11, \"label\");\n          i0.ɵɵtext(12, \"Start Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"input\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function GenerateItineraryComponent_Template_input_ngModelChange_13_listener($event) {\n            return ctx.startDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 6)(15, \"label\");\n          i0.ɵɵtext(16, \"End Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"input\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function GenerateItineraryComponent_Template_input_ngModelChange_17_listener($event) {\n            return ctx.endDate = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(18, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function GenerateItineraryComponent_Template_button_click_18_listener() {\n            return ctx.generateItinerary();\n          });\n          i0.ɵɵtext(19, \"Generate Itinerary\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(20, GenerateItineraryComponent_div_20_Template, 4, 0, \"div\", 9);\n          i0.ɵɵtemplate(21, GenerateItineraryComponent_div_21_Template, 4, 1, \"div\", 10);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngModel\", ctx.destination);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.startDate);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.endDate);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.safeHtmlResult);\n        }\n      },\n      dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.UserNavbarComponent],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r1","safeHtmlResult","ɵɵsanitizeHtml","GenerateItineraryComponent","constructor","http","sanitizer","destination","startDate","endDate","rawResult","isLoading","generateItinerary","body","post","subscribe","next","res","itinerary","bypassSecurityTrustHtml","convertToHtml","error","err","console","markdown","html","replace","trim","ɵɵdirectiveInject","i1","HttpClient","i2","DomSanitizer","selectors","decls","vars","consts","template","GenerateItineraryComponent_Template","rf","ctx","ɵɵlistener","GenerateItineraryComponent_Template_input_ngModelChange_8_listener","$event","GenerateItineraryComponent_Template_input_ngModelChange_13_listener","GenerateItineraryComponent_Template_input_ngModelChange_17_listener","GenerateItineraryComponent_Template_button_click_18_listener","ɵɵtemplate","GenerateItineraryComponent_div_20_Template","GenerateItineraryComponent_div_21_Template"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\generate-itinerary\\generate-itinerary.component.ts","E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\generate-itinerary\\generate-itinerary.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-generate-itinerary',\n  templateUrl: './generate-itinerary.component.html',\n})\nexport class GenerateItineraryComponent {\n  destination = '';\n  startDate = '';\n  endDate = '';\n  rawResult: string = '';\n  safeHtmlResult: SafeHtml = '';\n  isLoading: boolean = false;\n\n  constructor(private http: HttpClient, private sanitizer: DomSanitizer) {}\n\n  generateItinerary() {\n    this.rawResult = '';\n    this.safeHtmlResult = '';\n    this.isLoading = true;\n\n    const body = {\n      destination: this.destination,\n      startDate: this.startDate,\n      endDate: this.endDate,\n    };\n\n    this.http.post<any>('http://localhost:8089/api/gemini/generate-itinerary', body).subscribe({\n      next: (res) => {\n        this.rawResult = res.itinerary;\n        this.safeHtmlResult = this.sanitizer.bypassSecurityTrustHtml(\n          this.convertToHtml(res.itinerary)\n        );\n        this.isLoading = false;\n      },\n      error: (err) => {\n        console.error('Error:', err);\n        this.rawResult = 'An error occurred while generating the itinerary.';\n        this.safeHtmlResult = this.rawResult;\n        this.isLoading = false;\n      },\n    });\n  }\n\n  private convertToHtml(markdown: string): string {\n    let html = markdown;\n\n    // Convert headings\n    html = html.replace(/^## (.*$)/gim, '<h3>$1</h3>');\n    html = html.replace(/^# (.*$)/gim, '<h2>$1</h2>');\n\n    // Bold\n    html = html.replace(/\\*\\*(.*?)\\*\\*/gim, '<strong>$1</strong>');\n\n    // Italic\n    html = html.replace(/\\*(.*?)\\*/gim, '<em>$1</em>');\n\n    // Lists\n    html = html.replace(/^\\* (.*$)/gim, '<li>$1</li>');\n\n    // Wrap lists in <ul>\n    html = html.replace(/(<li>[\\s\\S]*?<\\/li>)/gim, '<ul>$1</ul>');\n\n    // Line breaks\n    html = html.replace(/\\n/g, '<br>');\n\n    return html.trim();\n  }\n}\n","<app-user-navbar></app-user-navbar>\n\n<div class=\"container mt-5\">\n  <div class=\"card shadow p-4\">\n    <h2 class=\"text-center mb-4\">Generate Travel Itinerary</h2>\n\n    <div class=\"mb-3\">\n      <label>Destination</label>\n      <input type=\"text\" [(ngModel)]=\"destination\" class=\"form-control\" placeholder=\"Enter destination\" />\n    </div>\n\n    <div class=\"row mb-3\">\n      <div class=\"col\">\n        <label>Start Date</label>\n        <input type=\"date\" [(ngModel)]=\"startDate\" class=\"form-control\" />\n      </div>\n      <div class=\"col\">\n        <label>End Date</label>\n        <input type=\"date\" [(ngModel)]=\"endDate\" class=\"form-control\" />\n      </div>\n    </div>\n\n    <button class=\"btn btn-primary w-100\" (click)=\"generateItinerary()\">Generate Itinerary</button>\n\n    <!-- Loader -->\n    <div *ngIf=\"isLoading\" class=\"text-center mt-4\">\n      <div class=\"spinner-border text-primary\" role=\"status\"></div>\n      <p class=\"mt-2\">Generating your itinerary...</p>\n    </div>\n\n    <!-- Result -->\n    <div *ngIf=\"!isLoading && safeHtmlResult\" class=\"mt-4\">\n      <h4 class=\"text-success mb-3\">Your Itinerary</h4>\n      <div [innerHTML]=\"safeHtmlResult\" class=\"formatted-itinerary p-3 border rounded bg-light\"></div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}