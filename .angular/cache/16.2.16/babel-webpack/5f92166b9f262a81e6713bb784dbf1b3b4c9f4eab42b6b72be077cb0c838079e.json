{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    const token = localStorage.getItem('token');\n    const role = localStorage.getItem('role');\n    const expectedRole = route.data['expectedRole']; // üîç role from route\n    if (!token) {\n      alert('Access denied. Please login.');\n      this.router.navigate(['/login']);\n      return false;\n    }\n    if (expectedRole && role !== expectedRole) {\n      alert('Access denied. You don‚Äôt have permission.');\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n  static {\n    this.…µfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.…µ…µinject(i1.Router));\n    };\n  }\n  static {\n    this.…µprov = /*@__PURE__*/i0.…µ…µdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.…µfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","router","canActivate","route","state","token","localStorage","getItem","role","expectedRole","data","alert","navigate","i0","…µ…µinject","i1","Router","factory","…µfac","providedIn"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    const token = localStorage.getItem('token');\n    const role = localStorage.getItem('role');\n    const expectedRole = route.data['expectedRole']; // üîç role from route\n\n    if (!token) {\n      alert('Access denied. Please login.');\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n    if (expectedRole && role !== expectedRole) {\n      alert('Access denied. You don‚Äôt have permission.');\n      this.router.navigate(['/login']);\n      return false;\n    }\n\n    return true;\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErCC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,MAAME,YAAY,GAAGN,KAAK,CAACO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IAEjD,IAAI,CAACL,KAAK,EAAE;MACVM,KAAK,CAAC,8BAA8B,CAAC;MACrC,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;IAGd,IAAIH,YAAY,IAAID,IAAI,KAAKC,YAAY,EAAE;MACzCE,KAAK,CAAC,2CAA2C,CAAC;MAClD,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;IAGd,OAAO,IAAI;EACb;;;uBAzBWb,SAAS,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATjB,SAAS;MAAAkB,OAAA,EAATlB,SAAS,CAAAmB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}