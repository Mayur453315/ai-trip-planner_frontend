{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction GenerateItineraryComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Travel Itinerary (in Hindi):\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.translatedItinerary);\n  }\n}\nfunction GenerateItineraryComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Weather Forecast:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r1.weather.weather[0].description, \" | \", ctx_r1.weather.main.temp, \"\\u00B0C\");\n  }\n}\nfunction GenerateItineraryComponent_div_8_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r4);\n  }\n}\nfunction GenerateItineraryComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Packing List:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, GenerateItineraryComponent_div_8_li_4_Template, 2, 1, \"li\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.packingList);\n  }\n}\nexport class GenerateItineraryComponent {\n  constructor(http) {\n    this.http = http;\n    this.destination = '';\n    this.itinerary = '';\n    this.translatedItinerary = '';\n    this.weather = null;\n    this.packingList = [];\n  }\n  generateItinerary() {\n    if (!this.destination) {\n      alert('Please enter a destination');\n      return;\n    }\n    this.getWeather().then(() => {\n      this.itinerary = `Welcome to your trip to ${this.destination}!\n\nWeather forecast: ${this.weather?.weather[0]?.description || 'Unknown'} with temperature around ${this.weather?.main?.temp}°C.\n\nPlaces to visit:\n- Famous landmarks\n- Local market\n- Museums\n\nEnjoy your trip!`;\n      this.translateToHindi(this.itinerary);\n      this.createPackingList();\n    });\n  }\n  getWeather() {\n    const apiKey = 'cf4280e39d29669fba3fcbd9bfc61b0c'; // Replace with your own OpenWeather API key\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.destination}&units=metric&appid=${apiKey}`;\n    return this.http.get(url).toPromise().then(res => {\n      this.weather = res;\n    }).catch(err => {\n      console.error('Weather fetch error:', err);\n      alert('Failed to fetch weather. Please check your destination name.');\n    });\n  }\n  translateToHindi(text) {\n    const url = 'https://libretranslate.de/translate';\n    const body = {\n      q: text,\n      source: 'en',\n      target: 'hi',\n      format: 'text'\n    };\n    this.http.post(url, body).subscribe(res => {\n      this.translatedItinerary = res.translatedText;\n    }, err => {\n      console.error('Translation error:', err);\n      this.translatedItinerary = 'Translation failed.';\n    });\n  }\n  createPackingList() {\n    const weatherMain = this.weather?.weather[0]?.main?.toLowerCase() || '';\n    const temp = this.weather?.main?.temp;\n    this.packingList = ['Passport', 'Phone Charger', 'Snacks'];\n    if (weatherMain.includes('rain')) {\n      this.packingList.push('Umbrella', 'Raincoat');\n    }\n    if (temp < 15) {\n      this.packingList.push('Jacket', 'Sweater');\n    }\n    if (temp > 30) {\n      this.packingList.push('Sunglasses', 'Sunscreen');\n    }\n  }\n  static {\n    this.ɵfac = function GenerateItineraryComponent_Factory(t) {\n      return new (t || GenerateItineraryComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GenerateItineraryComponent,\n      selectors: [[\"app-generate-itinerary\"]],\n      decls: 9,\n      vars: 4,\n      consts: [[\"placeholder\", \"Enter destination\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function GenerateItineraryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n          i0.ɵɵtext(2, \"AI Trip Planner\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 0);\n          i0.ɵɵlistener(\"ngModelChange\", function GenerateItineraryComponent_Template_input_ngModelChange_3_listener($event) {\n            return ctx.destination = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function GenerateItineraryComponent_Template_button_click_4_listener() {\n            return ctx.generateItinerary();\n          });\n          i0.ɵɵtext(5, \"Generate Itinerary\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(6, GenerateItineraryComponent_div_6_Template, 5, 1, \"div\", 2);\n          i0.ɵɵtemplate(7, GenerateItineraryComponent_div_7_Template, 5, 2, \"div\", 2);\n          i0.ɵɵtemplate(8, GenerateItineraryComponent_div_8_Template, 5, 1, \"div\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.destination);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.translatedItinerary);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.weather);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.packingList.length > 0);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\".main-title[_ngcontent-%COMP%] {\\n  font-size: 1.5rem;\\n  font-weight: bold;\\n  color: #2c3e50;\\n}\\n\\n.section-title[_ngcontent-%COMP%] {\\n  font-size: 1.25rem;\\n  margin-top: 1rem;\\n  color: #34495e;\\n}\\n\\n.formatted-itinerary[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n  padding-left: 1.2rem;\\n}\\n\\n.formatted-itinerary[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  margin-bottom: 0.5rem;\\n  list-style-type: disc;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZ2VuZXJhdGUtaXRpbmVyYXJ5L2dlbmVyYXRlLWl0aW5lcmFyeS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0Usb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLHFCQUFxQjtBQUN2QiIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluLXRpdGxlIHtcclxuICBmb250LXNpemU6IDEuNXJlbTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBjb2xvcjogIzJjM2U1MDtcclxufVxyXG5cclxuLnNlY3Rpb24tdGl0bGUge1xyXG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICBtYXJnaW4tdG9wOiAxcmVtO1xyXG4gIGNvbG9yOiAjMzQ0OTVlO1xyXG59XHJcblxyXG4uZm9ybWF0dGVkLWl0aW5lcmFyeSB1bCB7XHJcbiAgcGFkZGluZy1sZWZ0OiAxLjJyZW07XHJcbn1cclxuXHJcbi5mb3JtYXR0ZWQtaXRpbmVyYXJ5IGxpIHtcclxuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XHJcbiAgbGlzdC1zdHlsZS10eXBlOiBkaXNjO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","translatedItinerary","ɵɵtextInterpolate2","ctx_r1","weather","description","main","temp","item_r4","ɵɵtemplate","GenerateItineraryComponent_div_8_li_4_Template","ɵɵproperty","ctx_r2","packingList","GenerateItineraryComponent","constructor","http","destination","itinerary","generateItinerary","alert","getWeather","then","translateToHindi","createPackingList","apiKey","url","get","toPromise","res","catch","err","console","error","text","body","q","source","target","format","post","subscribe","translatedText","weatherMain","toLowerCase","includes","push","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","GenerateItineraryComponent_Template","rf","ctx","ɵɵlistener","GenerateItineraryComponent_Template_input_ngModelChange_3_listener","$event","GenerateItineraryComponent_Template_button_click_4_listener","GenerateItineraryComponent_div_6_Template","GenerateItineraryComponent_div_7_Template","GenerateItineraryComponent_div_8_Template","length"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\generate-itinerary\\generate-itinerary.component.ts","E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\generate-itinerary\\generate-itinerary.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-generate-itinerary',\n  templateUrl: './generate-itinerary.component.html',\n  styleUrls: ['./generate-itinerary.component.css']\n})\nexport class GenerateItineraryComponent {\n  destination: string = '';\n  itinerary: string = '';\n  translatedItinerary: string = '';\n  weather: any = null;\n  packingList: string[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  generateItinerary() {\n    if (!this.destination) {\n      alert('Please enter a destination');\n      return;\n    }\n\n    this.getWeather().then(() => {\n      this.itinerary = `Welcome to your trip to ${this.destination}!\n\nWeather forecast: ${this.weather?.weather[0]?.description || 'Unknown'} with temperature around ${this.weather?.main?.temp}°C.\n\nPlaces to visit:\n- Famous landmarks\n- Local market\n- Museums\n\nEnjoy your trip!`;\n\n      this.translateToHindi(this.itinerary);\n      this.createPackingList();\n    });\n  }\n\n  getWeather(): Promise<void> {\n    const apiKey = 'cf4280e39d29669fba3fcbd9bfc61b0c'; // Replace with your own OpenWeather API key\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.destination}&units=metric&appid=${apiKey}`;\n\n    return this.http.get(url).toPromise().then((res: any) => {\n      this.weather = res;\n    }).catch(err => {\n      console.error('Weather fetch error:', err);\n      alert('Failed to fetch weather. Please check your destination name.');\n    });\n  }\n\n  translateToHindi(text: string) {\n    const url = 'https://libretranslate.de/translate';\n    const body = {\n      q: text,\n      source: 'en',\n      target: 'hi',\n      format: 'text'\n    };\n\n    this.http.post(url, body).subscribe((res: any) => {\n      this.translatedItinerary = res.translatedText;\n    }, err => {\n      console.error('Translation error:', err);\n      this.translatedItinerary = 'Translation failed.';\n    });\n  }\n\n  createPackingList() {\n    const weatherMain = this.weather?.weather[0]?.main?.toLowerCase() || '';\n    const temp = this.weather?.main?.temp;\n\n    this.packingList = ['Passport', 'Phone Charger', 'Snacks'];\n\n    if (weatherMain.includes('rain')) {\n      this.packingList.push('Umbrella', 'Raincoat');\n    }\n    if (temp < 15) {\n      this.packingList.push('Jacket', 'Sweater');\n    }\n    if (temp > 30) {\n      this.packingList.push('Sunglasses', 'Sunscreen');\n    }\n  }\n}\n","<div>\n  <h2>AI Trip Planner</h2>\n\n  <input [(ngModel)]=\"destination\" placeholder=\"Enter destination\" />\n\n  <button (click)=\"generateItinerary()\">Generate Itinerary</button>\n\n  <div *ngIf=\"translatedItinerary\">\n    <h3>Travel Itinerary (in Hindi):</h3>\n    <p>{{ translatedItinerary }}</p>\n  </div>\n\n  <div *ngIf=\"weather\">\n    <h3>Weather Forecast:</h3>\n    <p>{{ weather.weather[0].description }} | {{ weather.main.temp }}°C</p>\n  </div>\n\n  <div *ngIf=\"packingList.length > 0\">\n    <h3>Packing List:</h3>\n    <ul>\n      <li *ngFor=\"let item of packingList\">{{ item }}</li>\n    </ul>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}