{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/trip.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction GenerateItineraryComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3, \"Generating your itinerary...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction GenerateItineraryComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"h4\");\n    i0.ɵɵtext(2, \"Generated Itinerary:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"pre\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.result);\n  }\n}\nexport class GenerateItineraryComponent {\n  constructor(route, tripService, http) {\n    this.route = route;\n    this.tripService = tripService;\n    this.http = http;\n    this.trip = null;\n    this.isLoading = true;\n    this.generatedContent = '';\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      const tripId = params['tripId'];\n      if (tripId) {\n        this.tripService.getTripById(+tripId).subscribe(data => {\n          this.trip = data;\n          this.generateItinerary();\n        });\n      }\n    });\n  }\n  generateItinerary() {\n    if (!this.trip) return;\n    const prompt = `Create a detailed day-by-day travel itinerary for a trip to ${this.trip.destination} from ${this.trip.startDate} to ${this.trip.endDate} with a budget of ${this.trip.budget} rupees.`;\n    const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyDPbHKSjvx2I7JudIxBAQOf8soJ_rNUtwQ`;\n    const body = {\n      contents: [{\n        parts: [{\n          text: prompt\n        }]\n      }]\n    };\n    this.http.post(url, body).subscribe({\n      next: response => {\n        this.generatedContent = response?.candidates?.[0]?.content?.parts?.[0]?.text || 'No content generated';\n        this.isLoading = false;\n      },\n      error: err => {\n        console.error('Error generating itinerary:', err);\n        this.generatedContent = 'Failed to generate itinerary.';\n        this.isLoading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function GenerateItineraryComponent_Factory(t) {\n      return new (t || GenerateItineraryComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.TripService), i0.ɵɵdirectiveInject(i3.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GenerateItineraryComponent,\n      selectors: [[\"app-generate-itinerary\"]],\n      decls: 13,\n      vars: 5,\n      consts: [[2, \"max-width\", \"600px\", \"margin\", \"auto\", \"padding\", \"20px\"], [2, \"margin-bottom\", \"10px\"], [\"type\", \"text\", \"placeholder\", \"Destination\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"style\", \"margin-top: 20px;\", 4, \"ngIf\"], [2, \"margin-top\", \"20px\"]],\n      template: function GenerateItineraryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Generate Travel Itinerary\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function GenerateItineraryComponent_Template_input_ngModelChange_4_listener($event) {\n            return ctx.destination = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 1)(6, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function GenerateItineraryComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.startDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 1)(8, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function GenerateItineraryComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.endDate = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function GenerateItineraryComponent_Template_button_click_9_listener() {\n            return ctx.generateItinerary();\n          });\n          i0.ɵɵtext(10, \"Generate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(11, GenerateItineraryComponent_div_11_Template, 4, 0, \"div\", 5);\n          i0.ɵɵtemplate(12, GenerateItineraryComponent_div_12_Template, 5, 1, \"div\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.destination);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.startDate);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.endDate);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.result);\n        }\n      },\n      dependencies: [i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","result","GenerateItineraryComponent","constructor","route","tripService","http","trip","isLoading","generatedContent","ngOnInit","queryParams","subscribe","params","tripId","getTripById","data","generateItinerary","prompt","destination","startDate","endDate","budget","url","body","contents","parts","text","post","next","response","candidates","content","error","err","console","ɵɵdirectiveInject","i1","ActivatedRoute","i2","TripService","i3","HttpClient","selectors","decls","vars","consts","template","GenerateItineraryComponent_Template","rf","ctx","ɵɵlistener","GenerateItineraryComponent_Template_input_ngModelChange_4_listener","$event","GenerateItineraryComponent_Template_input_ngModelChange_6_listener","GenerateItineraryComponent_Template_input_ngModelChange_8_listener","GenerateItineraryComponent_Template_button_click_9_listener","ɵɵtemplate","GenerateItineraryComponent_div_11_Template","GenerateItineraryComponent_div_12_Template","ɵɵproperty"],"sources":["E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\generate-itinerary\\generate-itinerary.component.ts","E:\\tka\\travel-itinerary-frontend\\src\\app\\pages\\generate-itinerary\\generate-itinerary.component.html"],"sourcesContent":["// import { Component } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-generate-itinerary',\n//   templateUrl: './generate-itinerary.component.html',\n// })\n// export class GenerateItineraryComponent {\n//   destination = '';\n//   startDate = '';\n//   endDate = '';\n//   result: string = '';\n//   isLoading: boolean = false; // <-- loader flag\n\n//   constructor(private http: HttpClient) {}\n\n//   generateItinerary() {\n//     this.result = '';\n//     this.isLoading = true; // start loading\n\n//     const body = {\n//       destination: this.destination,\n//       startDate: this.startDate,\n//       endDate: this.endDate,\n//     };\n\n//     this.http.post<any>('http://localhost:8089/api/gemini/generate-itinerary', body).subscribe({\n//       next: (res) => {\n//         this.result = res.itinerary;\n//         this.isLoading = false; // stop loading\n//       },\n//       error: (err) => {\n//         console.error('Error:', err);\n//         this.result = 'An error occurred while generating the itinerary.';\n//         this.isLoading = false; // stop loading\n//       },\n//     });\n//   }\n// }\n\n\n// ✅ STEP 2: Generate Itinerary Component that uses Gemini API\n// File: generate-itinerary.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TripService, Trip } from 'src/app/services/trip.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-generate-itinerary',\n  templateUrl: './generate-itinerary.component.html',\n})\nexport class GenerateItineraryComponent implements OnInit {\n  trip: Trip | null = null;\n  isLoading: boolean = true;\n  generatedContent: string = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private tripService: TripService,\n    private http: HttpClient\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(params => {\n      const tripId = params['tripId'];\n      if (tripId) {\n        this.tripService.getTripById(+tripId).subscribe(data => {\n          this.trip = data;\n          this.generateItinerary();\n        });\n      }\n    });\n  }\n\n  generateItinerary(): void {\n    if (!this.trip) return;\n\n    const prompt = `Create a detailed day-by-day travel itinerary for a trip to ${this.trip.destination} from ${this.trip.startDate} to ${this.trip.endDate} with a budget of ${this.trip.budget} rupees.`;\n\n    const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyDPbHKSjvx2I7JudIxBAQOf8soJ_rNUtwQ`;\n    const body = {\n      contents: [{ parts: [{ text: prompt }] }]\n    };\n\n    this.http.post<any>(url, body).subscribe({\n      next: (response) => {\n        this.generatedContent = response?.candidates?.[0]?.content?.parts?.[0]?.text || 'No content generated';\n        this.isLoading = false;\n      },\n      error: (err) => {\n        console.error('Error generating itinerary:', err);\n        this.generatedContent = 'Failed to generate itinerary.';\n        this.isLoading = false;\n      }\n    });\n  }\n}\n","<!-- <app-user-navbar></app-user-navbar>\n<!-- generate-itinerary.component.html -->\n<div style=\"max-width: 600px; margin: auto; padding: 20px;\">\n  <h2>Generate Travel Itinerary</h2>\n\n  <div style=\"margin-bottom: 10px;\">\n    <input type=\"text\" [(ngModel)]=\"destination\" placeholder=\"Destination\" class=\"form-control\" />\n  </div>\n\n  <div style=\"margin-bottom: 10px;\">\n    <input type=\"date\" [(ngModel)]=\"startDate\" class=\"form-control\" />\n  </div>\n\n  <div style=\"margin-bottom: 10px;\">\n    <input type=\"date\" [(ngModel)]=\"endDate\" class=\"form-control\" />\n  </div>\n\n  <button (click)=\"generateItinerary()\" class=\"btn btn-primary\">Generate</button>\n\n  <!-- Loader -->\n  <div *ngIf=\"isLoading\" style=\"margin-top: 20px;\">\n    <p><strong>Generating your itinerary...</strong></p>\n  </div>\n\n  <!-- Result -->\n  <div *ngIf=\"!isLoading && result\" style=\"margin-top: 20px;\">\n    <h4>Generated Itinerary:</h4>\n    <pre>{{ result }}</pre>\n  </div>\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}